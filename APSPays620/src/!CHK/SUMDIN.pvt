0001 ! 0
0010 ! ENHANCEMENT INSTALLATION PROGRAM <SUMDIN>
0020 ! COPYRIGHT 1995-96, DSD ASSOCIATES, INC.
0030 ! WRITTEN FOR THE EXTENDED MASTER DEVELOPER UTILITIES - EMD300
0040 ! ORIG: DSD 09/15/96, JCR 11/10/00, JCR 01/15/01, RLB 02/23/01, RLB 07/10/01
0050 ! MODS to remove 4 old DSD ENH files for 3.61 (3190,3420,20100-) RLB 12/04/01
0051 ! MODS to display DSD graphic if CS environment but client is also server RLB 05/13/02
0060 ! THIS PGM IS CALLED FROM MAS90 DURING STARTUP
0070 ! **********************************************************************
0080 ! 
0090 ENTER TERM$
0100 SETERR SUMDIN_EXIT; SETESC SUMDIN_EXIT
0101 ! 
0110 TRUE=1,FALSE=0
0130 CMP_STRING$="",CALLABLE$="",CTL_OK=0,MNU_OK=0,FIL_OK=0,DCT_OK=0
0140 FRM_OK=0,SIZ_OK=0,MOD_OK=0,CMP_OK=0,REC_OK=0,RUN_OK=0
0145 DD2_OK=0,Q01_OK=0,Q02_OK=0,Q03_OK=0,Q04_OK=0,QDD_OK=0
0150 GUI_BACK=15 ! GUI BACKGROUND COLOR 7-WHITE, 15=LT GREY
0160 GUI_FORE=0 ! GUI FOREGROUND COLOR
0170 UIMODE=0 ! UIMODE EITHER =GUI OR =TUI
0180 GUI=1,TUI=0 ! USED TO SET AND TEST UIMODE
0190 PWIN=FALSE ! TRUE IS A PROGRESS WINDOW IS DISPLAYED
0200 PMTITLE$="Enhancement Installation"
0210 PMMSG$="" ! PROGRESS METER MESSAGE
0220 IS_MAS90W=FALSE ! TRUE IF MAS90/W IS INSTALLED
0230 IS_WINDOWS=FALSE ! TRUE IF MS-WINDOWS IS RUNNING
0240 IS_LAUNCHER=FALSE ! TRUE IF /W LAUNCHER IS RUNNING
0250 ENH_CODE$="" ! ENH CODE OF ENH BEING INSTALLED
0260 ! 
0270 ! CHECK WHETHER THE LAUNCHER IS RUNNING
0280 IF TERM$(230,1)="Y" THEN IS_LAUNCHER=TRUE
0290 ! 
0300 ! CHECK WHETHER MAS90/W IS INSTALLED
0310 TMPCHN=HFN,E1=TMPCHN; OPEN (E1,ERR=0315,ISZ=10)"..\LAUNCHER\MNUMOD.TXT"; CLOSE (E1); IS_MAS90W=TRUE; GOSUB GET_TARGET_DIR
0320 ! 
0330 ! CHECK WHETHER WINDOWS IS RUNNING
0340 IF SYS="MS-WINDOWS" THEN IS_WINDOWS=TRUE
0350 ! 
0360 ! SET USER INTERFACE MODE
0370 ! IF IS_WINDOWS AND IS_MAS90W THEN LET UIMODE=GUI
0380 IF IS_LAUNCHER THEN UIMODE=GUI ELSE UIMODE=TUI
0390 ! 
0400 ! **********************************************************************
0410 ! CREATE POP-UP WINDOW
0420 ! 
0430 SWITCH UIMODE ! ----------------
0440 CASE GUI ! ---------------------
0450 ! SAVE %SYS_GUIPROG STATE AND FORCE TO 1 SO SOTA PRGS WILL WORK
0460 SAVE_SYS_GUIPROG=%SYS_GUIPROG
0470 %SYS_GUIPROG=1
0480 PRINT 'CURSOR'(1), ! MOUSE CURSOR TO HOURGLASS
0490 CALL "SYDISP","W","",50,18,-1,-1,"Master Developer Enhancement Installation","",TERM$ ! PRINT 'BLACK','_WHITE','DF','CS',
0500 GOSUB PICTURE_SHOW
0505 FIN1$=FIN(0),PICT_WINDOW=ASC(FIN1$(10,1))
0510 BREAK
0520 CASE TUI ! ---------------------
0530 PRINT @(0,3),'CE',
0540 CALL "SYDISP","W","",60,7,-1,-1,"Master Developer Enhancement Installation","",TERM$ ! PRINT 'BLACK','_WHITE','DF','CS',
0550 PRINT 'SB',
0560 PRINT @(5,1),"ENHANCEMENT:",@(5,2),"FILE:",@(5,3),"RECORD:",
0570 PRINT 'SF',
0580 BREAK
0590 END SWITCH ! -------------------
0600 ! 
0610 ! **********************************************************************
0620 ! OPEN SY0CTL.SOA
0630 ! 
0640 DIR$="SOA"; CALL "SYPATH",TERM$,DIR$; IF DIR$="ERR" THEN GOTO SUMDIN_EXIT
0650 CTLCHN=6,E1=CTLCHN,E1$="SY0CTL.SOA"; CLOSE (E1); OPEN (E1)E1$
0660 ! 
0670 ! **********************************************************************
0680 ! SUMDN2 SCANS THE MAS90 DIRECTORIES AND BUILDS A GOOD MDINST FILE
0690 ! 
0700 PERFORM "SUMDN2" ! SUMDN2 SCANS DIRS AND BUILDS CORRECT "MDINST" FILE
0710 ! 
0720 ! **********************************************************************
0730 ! OPEN FILES AND CHECK FOR "MDINST" FILE
0740 ! 
0750 DIR$="SOA"; CALL "SYPATH",TERM$,DIR$; IF DIR$="ERR" THEN GOTO SUMDIN_EXIT
0760 MDCTL=UNT,E1=MDCTL,E1$="MDINST"; OPEN (E1,ERR=SUMDIN_EXIT)E1$
0770 DI=0,DIR$="DI"; CALL "SYPATH",TERM$,DIR$; IF DIR$="ERR" THEN GOTO MAIN_PROCESS
0780 DICTL=UNT,E1=DICTL,E1$="DI0REC.SOA"; OPEN (E1,ERR=MAIN_PROCESS)E1$; DI=1
0790 ! 
0800 ! **********************************************************************
0810 ! MAIN PROCESS
0820 ! **********************************************************************
0830 ! PROCESS EACH LINE IN THE "MDINST" FILE
0840 ! 
0850 MAIN_PROCESS:
0860 ! 
0870 TOP_MDINST_LOOP: ! READ NEXT MDINST RECORD
0880 ! 
0890 E1=MDCTL; READ RECORD (E1,SIZ=34,END=SUMDIN_EXIT)ENH$
0900 IF LEN(ENH$)<33 THEN GOTO TOP_MDINST_LOOP
0910 IF ENH$(1,5)=DIM(5) THEN GOTO TOP_MDINST_LOOP
0920 PATH$=ENH$(1,2),BASE_APP$=ENH$(1,2),ENH_CODE$=ENH$(3,3)
0930 ! 
0940 SWITCH UIMODE ! ----------------
0950 CASE GUI ! ---------------------
0960 GOSUB PICTURE_SHOW
0970 ! INIT PROG METER (IF ONE EXISTS, KILL IT 1ST)
0980 PMTITLE$=ENH_CODE$+" Enhancement Installation"
0990 IF PWIN THEN CALL "SWPROG",2,0,0,PMTITLE$,PMMSG$,TERM$,""; PWIN=FALSE
1000 CALL "SWPROG",0,0,0,PMTITLE$,PMMSG$,TERM$,""; PWIN=TRUE
1010 CASE TUI ! ---------------------
1020 P1$=ENH$(6,27); GOSUB UPDATE_WINDOW
1030 END SWITCH 
1040 ! 
1050 IF BASE_APP$="IN" THEN PATH$="SOA"
1060 CWDIR ".."
1070 PATHCTL=UNT,E1=PATHCTL,E1$=PATH$; OPEN (E1,ERR=SUMDIN_EXIT)E1$
1080 ! 
1090 ! ----------------------------------------------------------------------
1100 ! CALLABLE PROGRAMS
1110 ! 
1120 FILE_NAME$=BASE_APP$+"0RUN."+ENH_CODE$,PGMCTL=UNT,E1=PGMCTL,E1$=FILE_NAME$,DIR$=PATH$,RUN_OK=0; CALL "SYPATH",TERM$,DIR$; IF DIR$="ERR" THEN GOTO 1270
1130 OPEN (E1,ERR=1270)E1$
1140 ! 
1150 P2$="Callable Programs",P3$=""; GOSUB UPDATE_WINDOW
1160 ! 
1170 RUN_OK=1
1180 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=*NEXT)
1190 E1=PGMCTL,K$=KEY(E1,END=1260)
1200 E1=PGMCTL,E2$=K$; READ (E1,KEY=E2$)RUN$
1210 ! 
1220 IF UIMODE=TUI THEN P3$=RUN$(3,12); GOSUB UPDATE_WINDOW
1230 ! 
1240 DIR$=STP(RUN$(15,12),2); CALL "SYPATH",TERM$,DIR$; IF DIR$<>"ERR" THEN E1$=STP(RUN$(3,12),2); SETERR 1250; CALL E1$,TERM$; SETERR SUMDIN_EXIT
1250 GOTO 1190
1260 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
1270 IF RUN_OK THEN GOSUB ERASE_FILE
1280 GOSUB UPDATE_WINDOW
1290 ! 
1300 ! ----------------------------------------------------------------------
1310 ! SY0FIL INSTALL
1320 ! 
1330 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0FIL."+ENH_CODE$,SOA_FILE$="SY0FIL.SOA",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 1470
1340 ! 
1350 IF UIMODE=TUI THEN P2$="SY0FIL",P3$=""; GOSUB UPDATE_WINDOW
1360 ! 
1370 FIL_OK=1,LAST_FILE$=""
1380 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=*NEXT)
1390 E1=PGMCTL,K$=KEY(E1,END=1470)
1400 IF LAST_FILE$<>K$(1,6) THEN DEL_KEY$=K$(1,6); GOSUB REMOVE_ENTRY; LAST_FILE$=K$(1,6)
1410 E1=PGMCTL,E2$=K$; READ (E1,KEY=E2$)FIL$; IF FIL$(7,3)="000" THEN READ (E1,KEY=E2$)FIL$,FIL0,FIL1,FIL2
1420 ! 
1430 IF UIMODE=TUI THEN P3$=K$; GOSUB UPDATE_WINDOW
1440 ! 
1450 IF FIL$(7,3)="000" THEN E1=SOACTL,E2$=K$; WRITE (E1,KEY=E2$)FIL$,FIL0,FIL1,FIL2 ELSE E1=SOACTL,E2$=K$; WRITE (E1,KEY=E2$)FIL$
1460 GOTO 1390
1470 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
1480 IF SOACTL<>0 THEN CLOSE (SOACTL)
1490 IF FIL_OK THEN GOSUB ERASE_FILE
1500 GOSUB UPDATE_WINDOW
1510 ! 
1520 ! ----------------------------------------------------------------------
1530 ! SY0DCT INSTALL
1540 ! 
1550 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0DCT."+ENH_CODE$,SOA_FILE$="SY0DCT.SOA",PGMCTL=0,SOACTL=0,LAST_APP$=""; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 1700
1560 ! 
1570 IF UIMODE=TUI THEN P2$="SY0DCT",P3$=""; GOSUB UPDATE_WINDOW
1580 ! 
1590 DCT_OK=1,LAST_FILE$=""
1600 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=*NEXT)
1610 E1=PGMCTL,K$=KEY(E1,END=1700)
1620 IF LAST_FILE$<>K$(1,10) THEN DEL_KEY$=K$(1,10); GOSUB REMOVE_ENTRY; LAST_FILE$=K$(1,10)
1630 E1=PGMCTL,E2$=K$; READ (E1,KEY=E2$)DCT$
1640 ! 
1650 IF UIMODE=TUI THEN P3$=K$; GOSUB UPDATE_WINDOW
1660 ! 
1670 E1=SOACTL,E2$=K$; WRITE (E1,KEY=E2$)DCT$
1680 IF DCT$(1,2)<>LAST_APP$ THEN APP$=DCT$(1,2); GOSUB ADD_APP_TO_COMPILE END_IF ; LAST_APP$=DCT$(1,2)
1690 GOTO 1610
1700 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
1710 IF SOACTL<>0 THEN CLOSE (SOACTL)
1720 IF DCT_OK THEN GOSUB ERASE_FILE
1730 GOSUB UPDATE_WINDOW
1740 ! 
1750 ! ----------------------------------------------------------------------
1760 ! SY0FRM INSTALL
1770 ! 
1780 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0FRM."+ENH_CODE$,SOA_FILE$="SY0FRM.SOA",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 1910
1790 ! 
1800 IF UIMODE=TUI THEN P2$="SY0FRM",P3$=""; GOSUB UPDATE_WINDOW
1810 ! 
1820 FRM_OK=1
1830 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=1840)
1840 E1=PGMCTL,K$=KEY(E1,END=1910)
1850 E1=PGMCTL,E2$=K$; READ (E1,KEY=E2$)FRM$
1860 ! 
1870 IF UIMODE=TUI THEN P3$=K$; GOSUB UPDATE_WINDOW
1880 ! 
1890 E1=SOACTL,E2$=K$; WRITE (E1,KEY=E2$)FRM$
1900 GOTO 1840
1910 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
1920 IF SOACTL<>0 THEN CLOSE (SOACTL)
1930 IF FRM_OK THEN GOSUB ERASE_FILE
1940 GOSUB UPDATE_WINDOW
1950 ! 
1960 ! ----------------------------------------------------------------------
1970 ! SY0EOP INSTALL
1980 ! 
1990 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0EOP."+ENH_CODE$,SOA_FILE$="SY0EOP.SOA",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 2120
2000 ! 
2010 IF UIMODE=TUI THEN P2$="SY0EOP",P3$=""; GOSUB UPDATE_WINDOW
2020 ! 
2030 EOP_OK=1
2040 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=2050)
2050 E1=PGMCTL,K$=KEY(E1,END=2120)
2060 E1=PGMCTL,E2$=K$; READ (E1,KEY=E2$)EOP$
2070 ! 
2080 IF UIMODE=TUI THEN P3$=K$; GOSUB UPDATE_WINDOW
2090 ! 
2100 E1=SOACTL,E2$=K$; WRITE (E1,KEY=E2$)EOP$
2110 GOTO 2050
2120 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
2130 IF SOACTL<>0 THEN CLOSE (SOACTL)
2140 IF EOP_OK THEN GOSUB ERASE_FILE
2150 GOSUB UPDATE_WINDOW
2160 ! 
2170 ! ----------------------------------------------------------------------
2180 ! SY0SIZ INSTALL
2190 ! 
2200 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0SIZ."+ENH_CODE$,SOA_FILE$="SY0SIZ.SOA",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 2330
2210 ! 
2220 IF UIMODE=TUI THEN P2$="SY0SIZ",P3$=""; GOSUB UPDATE_WINDOW
2230 ! 
2240 SIZ_OK=1
2250 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=2260)
2260 E1=PGMCTL,K$=KEY(E1,END=2330)
2270 E1=PGMCTL,E2$=K$; READ (E1,KEY=E2$)SIZ$
2280 ! 
2290 IF UIMODE=TUI THEN P3$=K$; GOSUB UPDATE_WINDOW
2300 ! 
2310 E1=SOACTL,E2$=K$; WRITE (E1,KEY=K$)SIZ$
2320 GOTO 2260
2330 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
2340 IF SOACTL<>0 THEN CLOSE (SOACTL)
2350 IF SIZ_OK THEN GOSUB ERASE_FILE
2360 GOSUB UPDATE_WINDOW
2370 ! 
2380 ! ----------------------------------------------------------------------
2390 ! WRITE MOD FILES TO SY0CTL
2400 ! 
2410 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0MOD."+ENH_CODE$,SOA_FILE$="SY0CTL.SOA",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 2560
2420 ! 
2430 IF UIMODE=TUI THEN P2$="SY0CTL",P3$=""; GOSUB UPDATE_WINDOW
2440 ! 
2450 MOD_OK=1
2460 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=2470)
2470 E1=PGMCTL,K$=KEY(E1,END=2560)
2480 E1=PGMCTL,E2$=K$; READ (E1,KEY=E2$)MOD$
2490 ! 
2500 IF UIMODE=TUI THEN P3$=MOD$(3,2); GOSUB UPDATE_WINDOW
2510 ! 
2520 IF MOD$(3,2)="LM" THEN REC_FIX$="lSYS" ELSE REC_FIX$="l"+MOD$(3,1)+"/"+MOD$(4,1)
2530 E1=SOACTL,E2$=REC_FIX$; READ (E1,KEY=E2$,DOM=2550)CTL$; CTL$(54,6)=MOD$(5,6)
2540 E1=SOACTL,E2$=REC_FIX$; WRITE (E1,KEY=E2$)CTL$
2550 GOTO 2470
2560 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
2570 IF SOACTL<>0 THEN CLOSE (SOACTL)
2580 IF MOD_OK THEN GOSUB ERASE_FILE
2590 GOSUB UPDATE_WINDOW
2600 ! 
2605 GOSUB UPDATE_SY0DD2 ! ADDED 9/18/00 FOR Version 3.50
2606 GOSUB UPDATE_ODBC ! Added 11/11/05 For Version 4.10 (CJS)
2607 GOSUB UPDATE_SY1Q01 ! ADDED 9/18/00 FOR Version 3.50
2608 GOSUB UPDATE_SY0DD4 ! ADDED 07/11/04 FOR Version 4.0
2610 ! ----------------------------------------------------------------------
2620 ! CHECK CMP FILE
2630 ! 
2640 FILE_NAME$=BASE_APP$+"0CMP."+ENH_CODE$,DIR$=PATH$; CALL "SYPATH",TERM$,DIR$; IF DIR$="ERR" THEN GOTO 2790
2650 PGMCTL=UNT,E1=PGMCTL,E1$=FILE_NAME$; OPEN (E1,ERR=2790)E1$
2660 ! 
2670 IF UIMODE=TUI THEN P2$="mm0CMP",P3$=""; GOSUB UPDATE_WINDOW
2680 ! 
2690 CMP_OK=1
2700 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=2710)
2710 E1=PGMCTL,K$=KEY(E1,END=2780)
2720 E1=PGMCTL,E2$=K$; READ (E1,KEY=E2$)CMP$
2730 ! 
2740 IF UIMODE=TUI THEN P3$=CMP$(3,2); GOSUB UPDATE_WINDOW
2750 ! 
2760 APP$=CMP$(3,2); GOSUB ADD_APP_TO_COMPILE
2770 GOTO 2710
2780 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
2790 IF CMP_OK THEN GOSUB ERASE_FILE
2800 GOSUB UPDATE_WINDOW
2810 ! 
2820 ! ----------------------------------------------------------------------
2830 ! DI0REC INSTALL
2840 ! 
2850 FILE_NAME$=BASE_APP$+"0REC."+ENH_CODE$; IF DI=0 THEN REC_OK=1; GOTO 3000 ELSE DIR$=PATH$; CALL "SYPATH",TERM$,DIR$; IF DIR$="ERR" THEN GOTO 3000
2860 PGMCTL=UNT,E1=PGMCTL,E1$=FILE_NAME$; OPEN (E1,ERR=3000)E1$
2870 ! 
2880 IF UIMODE=TUI THEN P2$="DI0REC",P3$=""; GOSUB UPDATE_WINDOW
2890 ! 
2900 REC_OK=1
2910 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=2920)
2920 E1=PGMCTL,K$=KEY(E1,END=2990)
2930 E1=PGMCTL,E2$=K$; READ (E1,KEY=E2$)REC$
2940 ! 
2950 IF UIMODE=TUI THEN P3$=K$; GOSUB UPDATE_WINDOW
2960 ! 
2970 E1=DICTL; WRITE (E1,KEY=K$)REC$
2980 GOTO 2920
2990 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
3000 IF REC_OK THEN GOSUB ERASE_FILE
3010 GOSUB UPDATE_WINDOW
3020 ! 
3030 ! ----------------------------------------------------------------------
3040 ! SY0CTL INSTALL
3050 ! 
3060 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0CTL."+ENH_CODE$,SOA_FILE$="SY0CTL.SOA",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 3200
3070 ! 
3080 IF UIMODE=TUI THEN P2$="SY0CTL",P3$=""; GOSUB UPDATE_WINDOW
3090 ! 
3100 CTL_OK=1
3110 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=3120)
3120 E1=PGMCTL,K$=KEY(E1,END=3190)
3130 E1=PGMCTL,E2$=K$; READ (E1,KEY=E2$)CTL$
3140 ! 
3150 IF UIMODE=TUI THEN P3$=K$; GOSUB UPDATE_WINDOW
3160 ! 
3170 E1=SOACTL,E2$=K$; WRITE (E1,KEY=E2$)CTL$
3180 GOTO 3120
3190 DIM LMLVL$(60); E1=SOACTL,E2$="lSYS"; READ (E1,KEY=E2$,DOM=*NEXT)LMLVL$ ! get LM lvl for later (12/04/01 RLB)
3200 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
3210 IF SOACTL<>0 THEN CLOSE (SOACTL)
3220 IF CTL_OK THEN GOSUB ERASE_FILE
3230 GOSUB UPDATE_WINDOW
3235 ! 
3240 ! ----------------------------------------------------------------------
3250 ! SY0MNU INSTALL
3260 ! 
3270 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0MNU."+ENH_CODE$,SOA_FILE$="SY0MNU.SOA",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 3380
3280 ! 
3290 IF UIMODE=TUI THEN P2$="SY0MNU",P3$=""; GOSUB UPDATE_WINDOW
3300 ! 
3310 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
3320 IF SOACTL<>0 THEN CLOSE (SOACTL)
3330 DIR$="SOA"; CALL "SYPATH",TERM$,DIR$; IF DIR$="ERR" THEN GOTO 3380
3340 SETERR 3380; SUMDMN_PATH$=LWD
3350 CALL "SUMDMN",FILE_NAME$,SUMDMN_PATH$,TERM$
3360 MNU_OK=1
3370 SETERR SUMDIN_EXIT
3380 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
3390 IF SOACTL<>0 THEN CLOSE (SOACTL)
3400 IF MNU_OK THEN GOSUB ERASE_FILE
3410 GOSUB UPDATE_WINDOW
3415 ! 
3420 ! IF POS("3.61">LMLVL$(50,4))>1 THEN GOSUB CHANGES_361 ! DSD ONLY
3425 ! IF POS("3.70">LMLVL$(50,4))>1 THEN GOSUB CHANGES_370 ! DSD ONLY
3430 ! 
3435 ! END OF RECORD
3440 GOTO TOP_MDINST_LOOP
3450 ! 
3460 ! **********************************************************************
3470 ! SUB PROGRAMS
3480 ! **********************************************************************
3490 ! 
3500 UPDATE_WINDOW:
3510 ! 
3520 ! PASS P1$,P2$,P3$ (STRINGS TO PRINT) WHERE:
3530 ! ENHANCEMENT=P1$, FILE=P2$, RECORD=P3$
3540 ! 
3550 SWITCH UIMODE ! ----------------
3560 CASE GUI ! ---------------------
3570 CALL "SWPROG",1,0,0,PMTITLE$,PMMSG$,TERM$,""
3580 BREAK
3590 CASE TUI ! -------------------
3600 PRINT @(22,1),'CL',UCS(P1$),
3610 PRINT @(22,2),'CL',UCS(P2$),
3620 PRINT @(22,3),'CL',UCS(P3$),
3630 BREAK
3640 END SWITCH ! -----------------
3650 RETURN 
3660 ! 
3670 ! **********************************************************************
3680 OPEN_FILE:
3690 ! 
3700 DIR$=PATH$; CALL "SYPATH",TERM$,DIR$; IF DIR$="ERR" THEN GOTO 3750
3710 PGMCTL=UNT,E1=PGMCTL,E1$=FILE_NAME$; OPEN (E1,ERR=3750)E1$
3720 DIR$="SOA"; CALL "SYPATH",TERM$,DIR$; IF DIR$="ERR" THEN GOTO 3750
3730 SOACTL=UNT,E1=SOACTL,E1$=SOA_FILE$; OPEN (E1,ERR=3750)E1$
3740 NO_OPEN=0
3750 RETURN 
3760 ! 
3770 ! **********************************************************************
3780 ADD_APP_TO_COMPILE:
3790 ! 
3800 ! CHECK TO ADD APP TO COMPILE STRING
3810 IF CMP_STRING$="" THEN CMP_STRING$=APP$; GOTO 3840
3820 CMP_NOT_FOUND=1; FOR CMP_CHK=1 TO (LEN(CMP_STRING$)-1) STEP 2; IF CMP_STRING$(CMP_CHK,2)=APP$ THEN CMP_NOT_FOUND=0 END_IF ; NEXT CMP_CHK
3830 IF CMP_NOT_FOUND THEN CMP_STRING$=CMP_STRING$+APP$
3840 RETURN 
3850 ! 
3860 ! **********************************************************************
3870 COMPILE_DICTIONARY:
3880 ! 
3890 SETERR 10060
3900 IF UIMODE=TUI THEN PRINT @(13,11),'SB',"COMPILATION:",'SF',
3910 IF LEN(CMP_STRING$)=0 THEN GOTO 3980
3920 FOR COMPILE=1 TO (LEN(CMP_STRING$)-1); APP$=CMP_STRING$(COMPILE,2)
3930 IF UIMODE=GUI THEN GOSUB UPDATE_WINDOW
3940 PRINT 'WINDOW'(0,-40,80,4),
3945 GOSUB FIND_SUCMPL; IF SUCMPL_OK THEN CALL "SUCMPL",APP$; GOTO 3960 ! UPDATED TO VERSION 3.50 BY JCR 01/15/01
3950 %RECOMPILE_FLG=1,APP_CMPL$=APP$(1,1)+"/"+APP$(2,1),OLD_TERM$=TERM$; CALL "SVCMPL",APP_CMPL$,TERM$; %RECOMPILE_FLG=0,TERM$=OLD_TERM$ ! UPDATED TO VERSION 3.50 BY JCR 01/15/01
3960 PRINT 'POP',
3970 NEXT COMPILE
3980 IF UIMODE=TUI THEN PRINT @(0,11),'CL',
3990 RETURN 
4000 ! 
4010 ! **********************************************************************
4020 ERASE_FILE:
4030 ! 
4040 DIR$=PATH$; CALL "SYPATH",TERM$,DIR$; IF DIR$="ERR" THEN GOTO 4060
4050 E1$=FILE_NAME$; ERASE FILE_NAME$,ERR=4060; E1$=""
4060 RETURN 
4070 ! 
4080 ! **********************************************************************
4090 REMOVE_ENTRY:
4100 ! 
4110 ! REMOVE AN ENTRY FROM THE SYSTEM FILE, PRIOR TO WRITING NEW RECORDS
4120 E1=SOACTL,E2$=DEL_KEY$; READ (E1,KEY=E2$,DOM=4130,END=4160)
4130 E1=SOACTL,E2$=KEY(E1,END=4160)
4140 IF E2$(1,LEN(DEL_KEY$))<>DEL_KEY$ THEN GOTO 4160
4150 REMOVE (E1,KEY=E2$); GOTO 4130
4160 RETURN 
4170 ! 
4180 ! **********************************************************************
9900 SUMDIN_EXIT: ! 9900
9905 ! perform "DSDCAA;CHECK_FOR_GRAPHICS" ! Not for other developers
9910 ! 
9920 IF UIMODE=TUI THEN PRINT 'POP',
9930 ! 
9940 IF CMP_STRING$<>"" THEN GOSUB COMPILE_DICTIONARY
9950 ! 
9960 ! IF A PROGRESS METER EXISTS, KILL IT
9970 IF PWIN THEN CALL "SWPROG",2,0,0,"","",TERM$,""; PWIN=FALSE
9980 ! 
9990 ! IF GUI THEN UPDATE LAUNCHER MENUS
9995 ! 
10000 E1=CTLCHN,E2$="lSYS"; READ (E1,KEY=E2$,DOM=*NEXT)LMLVL$; IF POS("3.4">LMLVL$(50,3))<2 THEN IF UIMODE=GUI THEN CALL "SVMENU","ALL",TERM$
10010 ! 
10020 PRINT 'CURSOR'(0), ! TURN MOUSE CURSOR BACK TO AN ARROW
10030 %SYS_GUIPROG=SAVE_SYS_GUIPROG
10040 ! 
10050 SETERR 10055; PRINT 'POP',
10060 SETERR 10120
10070 IF MDCTL THEN CLOSE (MDCTL)
10080 IF DICTL THEN CLOSE (DICTL)
10090 IF PATHCTL THEN CLOSE (PATHCTL)
10100 IF SOACTL THEN CLOSE (SOACTL)
10110 IF PGMCTL THEN CLOSE (PGMCTL)
10120 IF CTLCHN THEN CLOSE (CTLCHN)
10130 PATH$="SOA",FILE_NAME$="MDINST"; GOSUB ERASE_FILE
10140 EXIT 
10150 ! 
10160 ! **********************************************************************
11000 ! 11000 OPEN GRAPHICS FILE (EMD.BMP)
11010 ! 
11020 PICTURE_SHOW:
11030 IF ENH_CODE$="" THEN GOTO 11060
11040 FILENAME$=TARGETDIR$+"\SOA\"+ENH_CODE$+".BMP"
11050 TMPCHN=HFN,E1=TMPCHN; OPEN (E1,ERR=11060)FILENAME$; CLOSE (E1); GOTO 11065
11060 FILENAME$=TARGETDIR$+"\SOA\EMD.BMP"
11070 ! 
11080 A$=FIN(0),X_MAX=ASC(A$(3,1)),Y_MAX=ASC(A$(4,1))
11090 X=@X(X_MAX),Y=@Y(Y_MAX)
11100 WIDTH=800,HEIGHT=600
11110 POSX=0,POSY=0
11120 GOOD_PIC=1
11130 ! 
11135 IF PICT_WINDOW THEN FIN1$=FIN(0),WINDOW1=ASC(FIN1$(10,1)); IF WINDOW1<>PICT_WINDOW THEN PRINT 'GOTO'(PICT_WINDOW),
11140 PRINT 'PICTURE'(0,0,WIDTH,HEIGHT,FILENAME$,2)
11145 IF PICT_WINDOW THEN IF WINDOW1<>PICT_WINDOW THEN PRINT 'GOTO'(WINDOW1),
11150 ! 
11160 ! **********************************************************************
11500 ! 11500 SHOW_PROGRESS
11510 ! 
11520 SHOW_PROGRESS:
11530 CALL "SWPROG",1,0,0,PMTITLE$,"",TERM$,""
11540 RETURN 
11550 ! 
11560 IF UIMODE=TUI OR NOT(GOOD_PIC) THEN RETURN 
11570 PROGRESS=PROGRESS+1
11580 IF PROGRESS>13 THEN PROGRESS=1
11590 IF PROGRESS<>1 THEN GOTO 11650
11600 POSX=INT((X-358)/2),POSY=INT((Y-40)/2)+170
11610 PRINT 'PEN'(1,1,15),
11620 PRINT 'FILL'(1,15),
11630 PRINT 'RECTANGLE'(POSX-2,POSY,POSX+358,POSY+40),
11640 GOTO 11680
11650 PRINT 'PEN'(1,1,4),
11660 PRINT 'FILL'(1,4),
11670 PRINT 'RECTANGLE'(POSX+((PROGRESS-2)*30)+1,POSY+4,POSX+((PROGRESS-2)*30)+25,POSY+35),
11680 RETURN 
14990 ! 
15000 ! ************************ 3.50 ADDITIONS ******************************
15010 ! ----------------------------------------------------------------------
15020 UPDATE_SY0DD2:
15030 ! 
15035 ! SY0DD2 INSTALL
15040 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0DD2."+ENH_CODE$,SOA_FILE$="SY0DD2.SOA",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 15180
15050 ! 
15060 IF UIMODE=TUI THEN P2$="SY0DD2",P3$=""; GOSUB UPDATE_WINDOW
15070 ! 
15080 DD2_OK=1,LAST_FILE$=""
15090 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=15100)
15100 E1=PGMCTL,K$=KEY(E1,END=15180)
15110 IF LAST_FILE$<>K$(1,6) THEN DEL_KEY$=K$(1,6); GOSUB REMOVE_ENTRY; LAST_FILE$=K$(1,6)
15120 E1=PGMCTL,E2$=K$; READ RECORD (E1,KEY=E2$)DD2$
15130 ! 
15140 IF UIMODE=TUI THEN P3$=K$; GOSUB UPDATE_WINDOW
15150 ! 
15160 E1=SOACTL,E2$=K$; WRITE RECORD (E1,KEY=E2$)DD2$
15170 GOTO 15100
15180 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
15190 IF SOACTL<>0 THEN CLOSE (SOACTL)
15200 IF DD2_OK THEN GOSUB ERASE_FILE
15210 GOSUB UPDATE_WINDOW
15220 RETURN 
15221 ! 
15230 UPDATE_SY1Q01:
15240 ! 
15250 ! Q01
15251 ! 
15260 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0Q01."+ENH_CODE$,SOA_FILE$="SY1Q01.SOA",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 15400
15270 ! 
15280 IF UIMODE=TUI THEN P2$="SY1Q01",P3$=""; GOSUB UPDATE_WINDOW
15290 ! 
15300 Q01_OK=1,LAST_FILE$=""
15310 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=15320)
15320 E1=PGMCTL,K$=KEY(E1,END=15400)
15340 E1=PGMCTL,E2$=K$; READ RECORD (E1,KEY=E2$)Q01$
15350 ! 
15360 IF UIMODE=TUI THEN P3$=K$; GOSUB UPDATE_WINDOW
15370 ! 
15380 E1=SOACTL,E2$=K$; WRITE RECORD (E1,KEY=E2$)Q01$
15390 GOTO 15320
15400 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
15410 IF SOACTL<>0 THEN CLOSE (SOACTL)
15420 IF Q01_OK THEN GOSUB ERASE_FILE
15430 GOSUB UPDATE_WINDOW
15440 ! 
15450 ! Q02
15460 ! 
15470 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0Q02."+ENH_CODE$,SOA_FILE$="SY1Q02.SOA",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 15600
15480 ! 
15490 IF UIMODE=TUI THEN P2$="SY1Q02",P3$=""; GOSUB UPDATE_WINDOW
15500 ! 
15510 Q02_OK=1,LAST_FILE$=""
15520 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=15530)
15530 E1=PGMCTL,K$=KEY(E1,END=15600)
15540 E1=PGMCTL,E2$=K$; READ RECORD (E1,KEY=E2$)Q02$
15550 ! 
15560 IF UIMODE=TUI THEN P3$=K$; GOSUB UPDATE_WINDOW
15570 ! 
15580 E1=SOACTL,E2$=K$; WRITE RECORD (E1,KEY=E2$)Q02$
15590 GOTO 15530
15600 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
15610 IF SOACTL<>0 THEN CLOSE (SOACTL)
15620 IF Q02_OK THEN GOSUB ERASE_FILE
15630 GOSUB UPDATE_WINDOW
15640 ! 
15650 ! 
15660 ! Q03
15670 ! 
15680 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0Q03."+ENH_CODE$,SOA_FILE$="SY1Q03.SOA",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 15810
15690 ! 
15700 IF UIMODE=TUI THEN P2$="SY1Q03",P3$=""; GOSUB UPDATE_WINDOW
15710 ! 
15720 Q03_OK=1,LAST_FILE$=""
15730 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=15740)
15740 E1=PGMCTL,K$=KEY(E1,END=15810)
15750 E1=PGMCTL,E2$=K$; READ RECORD (E1,KEY=E2$)Q03$
15760 ! 
15770 IF UIMODE=TUI THEN P3$=K$; GOSUB UPDATE_WINDOW
15780 ! 
15790 E1=SOACTL,E2$=K$; WRITE RECORD (E1,KEY=E2$)Q03$
15800 GOTO 15740
15810 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
15820 IF SOACTL<>0 THEN CLOSE (SOACTL)
15830 IF Q03_OK THEN GOSUB ERASE_FILE
15840 GOSUB UPDATE_WINDOW
15850 ! 
15860 ! Q04
15870 ! 
15880 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0Q04."+ENH_CODE$,SOA_FILE$="SY1Q04.SOA",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 16010
15890 ! 
15900 IF UIMODE=TUI THEN P2$="SY1Q04",P3$=""; GOSUB UPDATE_WINDOW
15910 ! 
15920 Q04_OK=1,LAST_FILE$=""
15930 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=15940)
15940 E1=PGMCTL,K$=KEY(E1,END=16010)
15950 E1=PGMCTL,E2$=K$; READ RECORD (E1,KEY=E2$)Q04$
15960 ! 
15970 IF UIMODE=TUI THEN P3$=K$; GOSUB UPDATE_WINDOW
15980 ! 
15990 E1=SOACTL,E2$=K$; WRITE RECORD (E1,KEY=E2$)Q04$
16000 GOTO 15940
16010 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
16020 IF SOACTL<>0 THEN CLOSE (SOACTL)
16030 IF Q04_OK THEN GOSUB ERASE_FILE
16040 GOSUB UPDATE_WINDOW
16050 ! 
16070 ! QDD
16080 ! 
16090 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0QDD."+ENH_CODE$,SOA_FILE$="SY1QDD.SOA",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 16220
16100 ! 
16110 IF UIMODE=TUI THEN P2$="SY1QDD",P3$=""; GOSUB UPDATE_WINDOW
16120 ! 
16130 QDD_OK=1,LAST_FILE$=""
16140 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=16150)
16150 E1=PGMCTL,K$=KEY(E1,END=16220)
16160 E1=PGMCTL,E2$=K$; READ RECORD (E1,KEY=E2$)QDD$
16170 ! 
16180 IF UIMODE=TUI THEN P3$=K$; GOSUB UPDATE_WINDOW
16190 ! 
16200 E1=SOACTL,E2$=K$; WRITE RECORD (E1,KEY=E2$)QDD$
16210 GOTO 16150
16220 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
16230 IF SOACTL<>0 THEN CLOSE (SOACTL)
16240 IF QDD_OK THEN GOSUB ERASE_FILE
16250 GOSUB UPDATE_WINDOW
16260 ! 
16270 RETURN 
16271 ! 
16280 UPDATE_SY0DD4:
16290 ! DD4
16300 ! 
16310 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0DD4."+ENH_CODE$,SOA_FILE$="SY0DD4.SOA",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 16440
16320 ! 
16330 IF UIMODE=TUI THEN P2$="SY0DD4",P3$=""; GOSUB UPDATE_WINDOW
16340 ! 
16350 DD4_OK=1,LAST_FILE$=""
16360 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=16370)
16370 E1=PGMCTL,K$=KEY(E1,END=16440)
16380 E1=PGMCTL,E2$=K$; READ RECORD (E1,KEY=E2$)DD4$
16390 ! 
16400 IF UIMODE=TUI THEN P3$=K$; GOSUB UPDATE_WINDOW
16410 ! 
16420 E1=SOACTL,E2$=K$; WRITE RECORD (E1,KEY=E2$)DD4$
16430 GOTO 16370
16440 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
16450 IF SOACTL<>0 THEN CLOSE (SOACTL)
16460 IF DD4_OK THEN GOSUB ERASE_FILE
16470 GOSUB UPDATE_WINDOW
16471 ! 
16480 ! DD5
16490 ! 
16500 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0DD5."+ENH_CODE$,SOA_FILE$="SY0DD5.SOA",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 16630
16510 ! 
16520 IF UIMODE=TUI THEN P2$="SY0DD5",P3$=""; GOSUB UPDATE_WINDOW
16530 ! 
16540 DD5_OK=1,LAST_FILE$=""
16550 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=16560)
16560 E1=PGMCTL,K$=KEY(E1,END=16630)
16570 E1=PGMCTL,E2$=K$; READ RECORD (E1,KEY=E2$)DD5$
16580 ! 
16590 IF UIMODE=TUI THEN P3$=K$; GOSUB UPDATE_WINDOW
16600 ! 
16610 E1=SOACTL,E2$=K$; WRITE RECORD (E1,KEY=E2$)DD5$
16620 GOTO 16560
16630 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
16640 IF SOACTL<>0 THEN CLOSE (SOACTL)
16650 IF DD5_OK THEN GOSUB ERASE_FILE
16660 GOSUB UPDATE_WINDOW
16670 ! 
16680 RETURN 
20000 FIND_SUCMPL: ! ADDED BY JCR (01/15/01)
20010 ! 
20020 SUCMPL_OK=0,SUCMPL_E1=HFN,E1$="SUCMPL"; OPEN (SUCMPL_E1,ERR=*NEXT)E1$; CLOSE (SUCMPL_E1); SUCMPL_OK=1
20030 RETURN 
20040 ! 
20100 ! **********************************************************************
20110 ! !3.61 mods
20120 ! **********************************************************************
20130 ! 
20140 CHANGES_361:
20150 ! 
20160 PATH$="SOA",FILE_NAME$="DSDCHK."+ENH_CODE$; GOSUB ERASE_FILE
20170 PATH$="SOA",FILE_NAME$="DSDFIX."+ENH_CODE$; GOSUB ERASE_FILE
20180 ! LET PATH$=BASE_APP$,FILE_NAME$=BASE_APP$+"ZCAA."+ENH_CODE$; GOSUB ERASE_FILE ! dummy conversion program must exist
20190 PATH$=BASE_APP$,FILE_NAME$="CAA"+ENH_CODE$+".LIB"; GOSUB ERASE_FILE
20200 ! 
20210 RETURN 
20220 ! 
20230 GET_TARGET_DIR:
20240 ! 
20250 ! %SYS_CS_ROOT IS USED TO CHK FOR CS INSTEAD OF %SYS_WDX BECAUSE OF BEHAVIOR RUNNING ON THE SERVER ITSELF
20260 IF %SYS_CS_ROOT$<>"" THEN {
20270 TARGETDIR$=%SYS_CS_ROOT$
20290  } ELSE {
20300 TARGETDIR$=HWD,TARGETDIR$=TARGETDIR$(1,LEN(TARGETDIR$)-5)
20320  }
20330 RETURN 
20340 ! 
20350 CHANGES_370:
20360 ! 
20370 PATH$="SOA",FILE_NAME$="DSDCHK.LIC"; GOSUB ERASE_FILE
20410 ! 
20420 RETURN 
20430 ! 
30530 OPEN_ODBC_FILES:
30535 ! 
30536 NO_OPEN=1
30541 IF ODBC_MEM_FILE THEN CLOSE (ODBC_MEM_FILE,ERR=*RETURN); ODBC_MEM_FILE=0
30550 ODBC_MEM_FILE=HFN,E1=ODBC_MEM_FILE,E1$="*MEMORY*"; OPEN (E1,ERR=*RETURN)E1$
30560 IF OLD_ODBC_FILE THEN CLOSE (OLD_ODBC_FILE); OLD_ODBC_FILE=0
30570 IF OLD_ODBC_FLD THEN CLOSE (OLD_ODBC_FLD); OLD_ODBC_FLD=0
30580 OLD_ODBC_FILE=HFN; E1=OLD_ODBC_FILE,OLD_ODBC_FILE$="BACKUP\"+ODBC_FILE$,E1$=OLD_ODBC_FILE$; OPEN (E1,ERR=*RETURN)E1$
30590 OLD_ODBC_FLD=HFN; E1=OLD_ODBC_FLD,OLD_ODBC_FLD$="BACKUP\"+ODBC_FLD$,E1$=OLD_ODBC_FLD$; OPEN (E1,ERR=*RETURN)E1$
30600 ODBC_FILE=HFN,E1=ODBC_FILE,E1$=ODBC_FILE$; OPEN (E1,ERR=*RETURN)E1$
30601 ODBC_FLD=HFN,E1=ODBC_FLD,E1$=ODBC_FLD$; OPEN (E1,ERR=*RETURN)E1$
30602 NO_OPEN=0
30610 RETURN 
30611 ! 
31330 UPDATE_ODBC:
31340 ! Added for ProvideX ODBC Merge (11/11/05) (CJS)
31350 CALL "SYPATH",TERM$,"//DDICTS"
31360 DIRECTORY "BACKUP",ERR=*NEXT
31370 CALL "SYPATH",TERM$,"//"+BASE_APP$
31380 MOD_DIR$=LWD
31390 SELECT DDFILES$ FROM MOD_DIR$
31400 IF POS("FILE."+ENH_CODE$=UCS(DDFILES$)) THEN {
31410 NEW_ODBC_FILE=HFN; E1=NEW_ODBC_FILE,E1$=DDFILES$; OPEN (E1)E1$
31420 NEW_ODBC_FLD=HFN,E1=NEW_ODBC_FLD,E1$=DDFILES$(1,2)+"FLD."+ENH_CODE$; OPEN (E1)E1$
31430 ODBC_FILE$=UCS(DDFILES$(1,2))+"FILE.DD",ODBC_FLD$=UCS(DDFILES$(1,2))+"FLD.DD"
31440 CALL "SYPATH",TERM$,"//DDICTS"
31450 ERASE "BACKUP\"+ODBC_FILE$,ERR=*NEXT
31460 ERASE "BACKUP\"+ODBC_FLD$,ERR=*NEXT
31470 RENAME ODBC_FILE$,"BACKUP\"+ODBC_FILE$,ERR=*NEXT
31480 RENAME ODBC_FLD$,"BACKUP\"+ODBC_FLD$,ERR=*NEXT
31483 ERASE ODBC_FILE$,ERR=*NEXT ! CJS NEEDED FOR THIS ENVIRONMENT
31486 ERASE ODBC_FLD$,ERR=*NEXT ! CJS NEEDED FOR THIS ENVIRONMENT
31490 KEYED ODBC_FILE$,"[0:1:8],[0:9:30],[0:97:10]+[0:1:8]",,-512
31500 KEYED ODBC_FLD$,"[0:1:8],[0:17:30],[0:9:8]+[0:1:8]",,-512
31510 GOSUB OPEN_ODBC_FILES; IF NO_OPEN THEN GOTO NEXT_RECORD_UPDATE
31520 GOSUB PROCESS_ODBC_FILE
31530 CALL "SYPATH",TERM$,"//"+BASE_APP$
31540 NEXT_RECORD_UPDATE:
31550  }
31560 NEXT RECORD 
31570 RETURN 
31580 ! 
31590 PROCESS_ODBC_FILE:
31600 ! 
31610 P2$=UCS(DDFILES$(1,1))+"/"+UCS(DDFILES$(2,1))+" ODBC FILE",P3$=""
31620 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
31630 ! 
31640 ! Notes used here
31650 ODBC_OK=1,LAST_FILE$="",FLD_INRC=10,FIL_INCR=10
31660 SELECT OLD_FILE_REC$ FROM OLD_ODBC_FILE BEGIN $$ END $FE$
31670 IF OLD_FILE_REC$(1,8)="00000000" THEN E1=ODBC_FILE; WRITE RECORD (E1)OLD_FILE_REC$; GOTO NEXT_RECORD_PROCESS
31680 IF OLD_FILE_REC$(1,1)="9" THEN E1=ODBC_FILE; WRITE RECORD (E1)OLD_FILE_REC$; GOTO NEXT_RECORD_PROCESS
31690 WRITE (ODBC_MEM_FILE,KEY=OLD_FILE_REC$(9,30))OLD_FILE_REC$
31700 NEXT_RECORD_PROCESS:
31710 NEXT RECORD 
31720 ! 
31730 SELECT OLD_FLD_REC$ FROM OLD_ODBC_FLD BEGIN $$ END $FE$
31740 IF OLD_FLD_REC$(1,8)="00000000" THEN E1=ODBC_FLD; WRITE RECORD (E1)OLD_FLD_REC$
31750 IF OLD_FLD_REC$(1,1)="9" THEN E1=ODBC_FLD; WRITE RECORD (E1)OLD_FLD_REC$
31760 NEXT RECORD 
31770 ! 
31780 E1=NEW_ODBC_FILE,E2$=""; READ (E1,KEY=E2$,DOM=*NEXT)
31790 SELECT NEW_FILE_REC$ FROM E1 BEGIN $$ END $FE$
31800 WRITE (ODBC_MEM_FILE,KEY=NEW_FILE_REC$(9,30))NEW_FILE_REC$
31810 NEXT RECORD 
31820 ! 
31830 E1=ODBC_MEM_FILE
31850 SELECT MEM_REC$ FROM ODBC_MEM_FILE BEGIN $$ END $FE$
31860 E1=NEW_ODBC_FILE; READ (E1,KNO=1,KEY=MEM_REC$(9,30),DOM=*NEXT); GOSUB WRITE_NEW_ODBC; GOTO NEXT_RECORD_PROCESS2
31870 GOSUB WRITE_EXISTING_ODBC
31880 NEXT_RECORD_PROCESS2:
31890 NEXT RECORD 
31900 ! END ODBC PROCESS
31930 GOSUB ERASE_ODBC_FILES
31940 RETURN 
31950 ! 
31960 WRITE_NEW_ODBC:
31970 ! 
31976 E1=OLD_ODBC_FILE,E2$=MEM_REC$(9,30); READ (E1,KNO=1,KEY=E2$,DOM=*NEXT)OLD_ODBC_RECORD$; CHANGERECORD=1
31982 IF CHANGERECORD THEN {
31988 OLD_PRIMARY_KEY$=OLD_ODBC_RECORD$(1,8),NEW_ODBC_RECORD$=PAD(STR(FIL_INCR),8,0,"0")+OLD_ODBC_RECORD$(9); FIL_INCR+=10
31994  } ELSE {
32000 OLD_PRIMARY_KEY$=MEM_REC$(1,8),NEW_ODBC_RECORD$=PAD(STR(FIL_INCR),8,0,"0")+MEM_REC$(9); FIL_INCR+=10
32006  }
32012 E1=ODBC_FILE,E2$=NEW_ODBC_RECORD$(1,8); WRITE RECORD (E1)NEW_ODBC_RECORD$; CHANGERECORD=0
32018 SELECT NEW_FLD_RECORD$ FROM NEW_ODBC_FLD BEGIN $$ END $FE$
32024 IF NEW_FLD_RECORD$(9,8)=OLD_PRIMARY_KEY$ THEN {
32030 FLD_RECORD$=NEW_FLD_RECORD$,FLD_RECORD$(9,8)=NEW_ODBC_RECORD$(1,8),FLD_RECORD$(1,8)=PAD(STR(FLD_INCR),8,0,"0"); WRITE RECORD (ODBC_FLD)FLD_RECORD$; FLD_INCR+=10
32036  }
32042 NEXT RECORD 
32060 RETURN 
32070 ! 
32080 WRITE_EXISTING_ODBC:
32090 ! 
32100 E1=OLD_ODBC_FILE,E2$=MEM_REC$(9,30); READ (E1,KNO=1,KEY=E2$)OLD_ODBC_RECORD$
32110 OLD_PRIMARY_KEY$=OLD_ODBC_RECORD$(1,8),NEW_ODBC_RECORD$=OLD_ODBC_RECORD$,NEW_ODBC_RECORD$(1,8)=PAD(STR(FIL_INCR),8,0,"0"); FIL_INCR+=10
32120 E1=ODBC_FILE,E2$=NEW_ODBC_RECORD$(1,8); WRITE RECORD (ODBC_FILE)NEW_ODBC_RECORD$
32130 SELECT OLD_FLD_RECORD$ FROM OLD_ODBC_FLD BEGIN $$ END $FE$
32140 IF OLD_FLD_RECORD$(9,8)=OLD_PRIMARY_KEY$ THEN {
32150 NEW_FLD_RECORD$=OLD_FLD_RECORD$,NEW_FLD_RECORD$(9,8)=NEW_ODBC_RECORD$(1,8),NEW_FLD_RECORD$(1,8)=PAD(STR(FLD_INCR),8,0,"0"); WRITE RECORD (ODBC_FLD)NEW_FLD_RECORD$; FLD_INCR+=10
32160  }
32170 NEXT RECORD 
32180 RETURN 
32190 ! 
32200 ERASE_ODBC_FILES:
32210 ! PRINT "Erasing Files: ODBC"
32216 IF NEW_ODBC_FILE THEN { ODBC_PATH$=FID(NEW_ODBC_FILE) }
32222 CLOSE (NEW_ODBC_FILE,ERR=*NEXT)
32228 NEW_ODBC_FILE=0
32234 E1$=ODBC_PATH$(9)
32240 ERASE E1$,ERR=*NEXT
32246 IF NEW_ODBC_FLD THEN { ODBC_PATH$=FID(NEW_ODBC_FLD) }
32252 CLOSE (NEW_ODBC_FLD,ERR=*NEXT)
32258 NEW_ODBC_FLD=0
32264 E1$=ODBC_PATH$(9)
32270 ERASE E1$,ERR=*NEXT
32280 RETURN 
32290 ! 
