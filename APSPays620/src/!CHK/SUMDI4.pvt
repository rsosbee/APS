0001 ! 0
0010 ! ENHANCEMENT INSTALLATION PROGRAM <SUMDI4>
0020 ! COPYRIGHT 1995-04, DSD Business Systems Inc.
0030 ! WRITTEN FOR THE EXTENDED MASTER DEVELOPER UTILITIES - EMD400
0040 ! ORIG: DSD 09/15/96, JCR 11/10/00, JCR 01/15/01, RLB 02/23/01, RLB 07/10/01 09/15/04 (JCR) 12/21/04 (JCR) 08/17/06 (JCR) 12/22/06 (JCR) 06/15/07 (CJS) 12/29/08 (CJS)]
0060 ! THIS PGM IS CALLED FROM DSDINST During Installation
0070 ! **********************************************************************
0080 ! 
0090 ENTER CMP_STRING$,TERM$
0095 ENTER *,*,ENH_DDF,MAS_DDF,ERR=*NEXT
0100 SETERR ERR_TRAP; SETESC ESC_TRAP ! 
0101 ! 
0110 TRUE=1,FALSE=0
0130 CMP_STRING$="",CALLABLE$="",CTL_OK=0,MNU_OK=0,FIL_OK=0,DCT_OK=0
0140 FRM_OK=0,SIZ_OK=0,MOD_OK=0,CMP_OK=0,REC_OK=0,RUN_OK=0
0145 DD2_OK=0,Q01_OK=0,Q02_OK=0,Q03_OK=0,Q04_OK=0,QDD_OK=0
0200 PMTITLE$="Enhancement Installation"
0210 PMMSG$="Installing Components..." ! PROGRESS METER MESSAGE
0250 ENH_CODE$="" ! ENH CODE OF ENH BEING INSTALLED
0260 ! 
0270 ! LAUNCHER IS NEVER RUNNING
0290 ! 
0300 ! ALWAYS MAS90/W
0310 GOSUB GET_TARGET_DIR
0320 ! 
0330 ! WINDOWS ALWAYS IS RUNNING
0350 ! 
0360 ! SET USER INTERFACE MODE
0390 ! 
0400 ! **********************************************************************
0410 ! CREATE POP-UP WINDOW
0420 ! 
0450 ! SAVE %SYS_GUIPROG STATE AND FORCE TO 1 SO SOTA PRGS WILL WORK
0460 SAVE_SYS_GUIPROG=%SYS_GUIPROG
0470 %SYS_GUIPROG=1
0480 CALL "SWPROG",0,0,0,PMTITLE$,PMMSG$,TERM$,""
0600 ! 
0610 ! **********************************************************************
0620 ! OPEN SY0CTL.SOA
0630 ! 
0640 DIR$="SOA"; CALL "SYPATH",TERM$,DIR$; IF DIR$="ERR" THEN GOTO SUMDIN_EXIT
0650 CTLCHN=6,E1=CTLCHN,E1$="SY0CTL.SOA"; CLOSE (E1); OPEN (E1)E1$
0660 ! 
0670 ! **********************************************************************
0680 ! SUMDN2 SCANS THE MAS90 DIRECTORIES AND BUILDS A GOOD MDINST FILE
0690 ! 
0700 PERFORM "SUMDN2" ! SUMDN2 SCANS DIRS AND BUILDS CORRECT "MDINST" FILE
0710 ! 
0720 ! **********************************************************************
0730 ! OPEN FILES AND CHECK FOR "MDINST" FILE
0740 ! 
0750 DIR$="SOA"; CALL "SYPATH",TERM$,DIR$; IF DIR$="ERR" THEN GOTO SUMDIN_EXIT
0760 MDCTL=UNT,E1=MDCTL,E1$="MDINST"; OPEN (E1,ERR=SUMDIN_EXIT)E1$
0790 ! 
0800 ! **********************************************************************
0810 ! MAIN PROCESS
0820 ! **********************************************************************
0830 ! PROCESS EACH LINE IN THE "MDINST" FILE
0840 ! 
0850 MAIN_PROCESS:
0860 ! 
0870 TOP_MDINST_LOOP: ! READ NEXT MDINST RECORD
0880 ! 
0890 E1=MDCTL; READ RECORD (E1,SIZ=34,END=SUMDIN_EXIT)ENH$
0900 IF LEN(ENH$)<33 THEN GOTO TOP_MDINST_LOOP
0910 IF ENH$(1,5)=DIM(5) THEN GOTO TOP_MDINST_LOOP
0920 PATH$=ENH$(1,2),BASE_APP$=ENH$(1,2),ENH_CODE$=ENH$(3,3)
0930 ! 
1050 IF BASE_APP$="IN" THEN PATH$="SOA"
1060 CWDIR ".."
1070 PATHCTL=UNT,E1=PATHCTL,E1$=PATH$; OPEN (E1,ERR=SUMDIN_EXIT)E1$
1080 ! 
1090 ! ----------------------------------------------------------------------
1100 ! CALLABLE PROGRAMS
1110 ! 
1120 ASI=1; FILE_NAME$=BASE_APP$+"0RUN."+ENH_CODE$,PGMCTL=UNT,E1=PGMCTL,E1$=FILE_NAME$,DIR$=PATH$,RUN_OK=0; CALL "SYPATH",TERM$,DIR$; IF DIR$="ERR" THEN GOTO ASI_RUN ! IK 2009/06/15 PLW 2011/01/12 Changed GOTO to ASI_RUN
1130 ASI=1; OPEN (E1,ERR=ASI_RUN)E1$ ! IK 2009/06/15 PLW 2011/01/12 Changed ERR= to ASI_RUN
1150 P2$="Callable Programs",P3$=""
1155 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
1160 ! 
1170 RUN_OK=1
1180 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=*NEXT)
1190 E1=PGMCTL,K$=KEY(E1,END=ASI_RUN) ! IK 2009/06/15  * 1190 LET E1=PGMCTL,K$=KEY(E1,END=1260)
1200 E1=PGMCTL,E2$=K$; READ (E1,KEY=E2$)RUN$
1210 ! 
1230 ! 
1240 DIR$=STP(RUN$(15,12),2); CALL "SYPATH",TERM$,DIR$; IF DIR$<>"ERR" THEN E1$=STP(RUN$(3,12),2); SETERR 1250; CALL E1$,TERM$; SETERR SUMDIN_EXIT
1250 GOTO 1190
1251 ASI_RUN: ! IK 2009/06/15
1252 IF ASI_RUN_OK THEN GOTO CONT_SUMDI4 ! IK 2009/06/15
1253 ASI_RUN_OK=1; messagebox "SUMDI4 ASI_Run for menuFX_APS."
1254 DIR$="SOA"; CALL "SYPATH",TERM$,DIR$; IF DIR$<>"ERR" THEN E1$="MENUFX_APS"; SETERR 1255; CALL E1$,TERM$; SETERR SUMDIN_EXIT ! IK 2012/08/22 
1255 IF E1$="MENUFX_APS" THEN ERASE E1$,ERR=*NEXT ! IK 2012/08/22
1258 ERASE "ASI_AdditionDict",ERR=*NEXT ! IK 2009/06/15
1259 CONT_SUMDI4: ! IK 2009/06/15
1260 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
1270 IF RUN_OK THEN GOSUB ERASE_FILE
1280 GOSUB UPDATE_WINDOW
1290 ! 
1520 ! ----------------------------------------------------------------------
1530 ! SY0DCT INSTALL
1540 ! 
1550 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0DCT."+ENH_CODE$,SOA_FILE$="sy0dct.soa",PGMCTL=0,SOACTL=0,LAST_APP$=""; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 1700
1560 ! 
1570 P2$="SY0DCT",P3$=""
1575 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
1580 ! 
1590 DCT_OK=1,LAST_FILE$=""
1600 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=*NEXT)
1610 E1=PGMCTL,K$=KEY(E1,END=1700)
1620 IF LAST_FILE$<>K$(1,10) THEN DEL_KEY$=K$(1,10); GOSUB REMOVE_ENTRY; LAST_FILE$=K$(1,10)
1630 E1=PGMCTL,E2$=K$; READ (E1,KEY=E2$)DCT$
1640 ! 
1660 ! 
1670 E1=SOACTL,E2$=K$; WRITE (E1,KEY=E2$)DCT$
1680 IF DCT$(1,2)<>LAST_APP$ THEN APP$=DCT$(1,2); GOSUB ADD_APP_TO_COMPILE END_IF ; LAST_APP$=DCT$(1,2)
1690 GOTO 1610
1700 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
1710 IF SOACTL<>0 THEN CLOSE (SOACTL)
1720 IF DCT_OK THEN GOSUB ERASE_FILE
1730 GOSUB UPDATE_WINDOW
1740 ! 
1750 ! ----------------------------------------------------------------------
1760 ! SY0FRM INSTALL
1770 ! 
1780 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0FRM."+ENH_CODE$,SOA_FILE$="sy0frm.soa",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 1910
1790 ! 
1800 P2$="SY0FRM",P3$=""
1805 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
1810 ! 
1820 FRM_OK=1
1830 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=1840)
1840 E1=PGMCTL,K$=KEY(E1,END=1910)
1850 E1=PGMCTL,E2$=K$; READ (E1,KEY=E2$)FRM$
1860 ! 
1880 ! 
1890 E1=SOACTL,E2$=K$; WRITE (E1,KEY=E2$)FRM$
1900 GOTO 1840
1910 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
1920 IF SOACTL<>0 THEN CLOSE (SOACTL)
1930 IF FRM_OK THEN GOSUB ERASE_FILE
1940 GOSUB UPDATE_WINDOW
1950 ! 
1960 ! ----------------------------------------------------------------------
1970 ! SY0EOP INSTALL
1980 ! 
1990 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0EOP."+ENH_CODE$,SOA_FILE$="sy0eop.soa",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 2120
2000 ! 
2010 P2$="SY0EOP",P3$=""
2015 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
2020 ! 
2030 EOP_OK=1
2040 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=2050)
2050 E1=PGMCTL,K$=KEY(E1,END=2120)
2060 E1=PGMCTL,E2$=K$; READ (E1,KEY=E2$)EOP$
2070 ! 
2090 ! 
2100 E1=SOACTL,E2$=K$; WRITE (E1,KEY=E2$)EOP$
2110 GOTO 2050
2120 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
2130 IF SOACTL<>0 THEN CLOSE (SOACTL)
2140 IF EOP_OK THEN GOSUB ERASE_FILE
2150 GOSUB UPDATE_WINDOW
2160 ! 
2170 ! ----------------------------------------------------------------------
2180 ! SY0SIZ INSTALL
2190 ! 
2200 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0SIZ."+ENH_CODE$,SOA_FILE$="sy0siz.soa",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 2330
2210 ! 
2220 P2$="SY0SIZ",P3$=""
2225 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
2230 ! 
2240 SIZ_OK=1
2250 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=2260)
2260 E1=PGMCTL,K$=KEY(E1,END=2330)
2270 E1=PGMCTL,E2$=K$; READ (E1,KEY=E2$)SIZ$
2280 ! 
2300 ! 
2310 E1=SOACTL,E2$=K$; WRITE (E1,KEY=K$)SIZ$
2320 GOTO 2260
2330 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
2340 IF SOACTL<>0 THEN CLOSE (SOACTL)
2350 IF SIZ_OK THEN GOSUB ERASE_FILE
2360 GOSUB UPDATE_WINDOW
2370 ! 
2380 ! ----------------------------------------------------------------------
2390 ! WRITE MOD FILES TO SY0CTL
2400 ! 
2410 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0MOD."+ENH_CODE$,SOA_FILE$="sy0ctl.soa",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 2560
2420 ! 
2430 P2$="SY0CTL",P3$=""
2435 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
2440 ! 
2450 MOD_OK=1
2460 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=2470)
2470 E1=PGMCTL,K$=KEY(E1,END=2560)
2480 E1=PGMCTL,E2$=K$; READ (E1,KEY=E2$)MOD$
2490 ! 
2510 ! 
2520 IF MOD$(3,2)="LM" THEN REC_FIX$="lSYS" ELSE REC_FIX$="l"+MOD$(3,1)+"/"+MOD$(4,1)
2530 E1=SOACTL,E2$=REC_FIX$; READ (E1,KEY=E2$,DOM=2550)CTL$; CTL$(54,6)=MOD$(5,6)
2540 E1=SOACTL,E2$=REC_FIX$; WRITE (E1,KEY=E2$)CTL$
2550 GOTO 2470
2560 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
2570 IF SOACTL<>0 THEN CLOSE (SOACTL)
2580 IF MOD_OK THEN GOSUB ERASE_FILE
2590 GOSUB UPDATE_WINDOW
2600 ! 
2603 GOSUB UPDATE_SY0DD2 ! ADDED 9/18/00 FOR Version 3.50
2604 GOSUB UPDATE_ODBC ! Added 11/11/05 For Version 4.10 (CJS)
2605 GOSUB UPDATE_LIBRARY_PATCH ! Added for patch install file (CJS)
2606 GOSUB UPDATE_DCL ! Added 11/11/05 For Version 4.10 (CJS)
2607 GOSUB UPDATE_SY1Q01 ! ADDED 9/18/00 FOR Version 3.50
2608 GOSUB UPDATE_SY0DD4 ! Added 07/11/04 For Version 4.00
2609 GOSUB UPDATE_4X_FILES ! Added 06/24/04 For Version 4.00
2610 ! ----------------------------------------------------------------------
2620 ! CHECK CMP FILE
2630 ! 
2640 FILE_NAME$=BASE_APP$+"0CMP."+ENH_CODE$,DIR$=PATH$; CALL "SYPATH",TERM$,DIR$; IF DIR$="ERR" THEN GOTO 2790
2650 PGMCTL=UNT,E1=PGMCTL,E1$=FILE_NAME$; OPEN (E1,ERR=2790)E1$
2660 ! 
2670 P2$="mm0CMP",P3$=""
2675 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
2680 ! 
2690 CMP_OK=1
2700 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=2710)
2710 E1=PGMCTL,K$=KEY(E1,END=2780)
2720 E1=PGMCTL,E2$=K$; READ (E1,KEY=E2$)CMP$
2730 ! 
2750 ! 
2760 APP$=CMP$(3,2); GOSUB ADD_APP_TO_COMPILE
2770 GOTO 2710
2780 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
2790 IF CMP_OK THEN GOSUB ERASE_FILE
2800 GOSUB UPDATE_WINDOW
2810 ! 
3030 ! ----------------------------------------------------------------------
3040 ! SY0CTL INSTALL
3050 ! 
3060 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0CTL."+ENH_CODE$,SOA_FILE$="sy0ctl.soa",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 3200
3070 ! 
3080 P2$="SY0CTL",P3$=""
3085 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
3090 ! 
3100 CTL_OK=1
3110 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=3120)
3120 E1=PGMCTL,K$=KEY(E1,END=3190)
3130 E1=PGMCTL,E2$=K$; READ (E1,KEY=E2$)CTL$
3140 ! 
3160 ! 
3170 E1=SOACTL,E2$=K$; WRITE (E1,KEY=E2$)CTL$
3180 GOTO 3120
3190 DIM LMLVL$(60); E1=SOACTL,E2$="lSYS"; READ (E1,KEY=E2$,DOM=*NEXT)LMLVL$ ! get LM lvl for later (12/04/01 RLB)
3200 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
3210 IF SOACTL<>0 THEN CLOSE (SOACTL)
3220 IF CTL_OK THEN GOSUB ERASE_FILE
3230 GOSUB UPDATE_WINDOW
3235 ! 
3240 ! ----------------------------------------------------------------------
3250 ! SY0MNU INSTALL
3260 ! 
3261 GOSUB SY_MENU_INSTALL
3415 ! 
3420 ! IF POS("3.61">LMLVL$(50,4))>1 THEN GOSUB CHANGES_361 ! DSD ONLY
3425 ! IF POS("3.70">LMLVL$(50,4))>1 THEN GOSUB CHANGES_370 ! DSD ONLY
3426 ! leave out until working
3430 ! call "SVPIPR;PATCH_INSTALL",err=*next,ENH_CODE$,TERM$ ! Call the new 4.0 patch format
3435 ! END OF RECORD
3440 GOTO TOP_MDINST_LOOP
3450 ! 
3460 ! **********************************************************************
3470 ! SUB PROGRAMS
3480 ! **********************************************************************
3490 ! 
3500 UPDATE_WINDOW:
3510 ! 
3520 ! PASS P1$,P2$,P3$ (STRINGS TO PRINT) WHERE:
3530 ! ENHANCEMENT=P1$, FILE=P2$, RECORD=P3$
3540 ! 
3570 CALL "SWPROG",1,0,0,PMTITLE$,PMMSG$,TERM$,""
3650 RETURN 
3660 ! 
3670 ! **********************************************************************
3680 OPEN_FILE:
3690 ! 
3700 DIR$=PATH$; CALL "SYPATH",TERM$,DIR$; IF DIR$="ERR" THEN GOTO 3750
3710 IF NOT(%SYS_SS) THEN PGMCTL=UNT,E1=PGMCTL,E1$=FILE_NAME$; OPEN (E1,ERR=3750)E1$ ELSE IF MID(FILE_NAME$,3,1)="0" THEN PGMCTL=UNT,E1=PGMCTL,E1$=FILE_NAME$; OPEN (E1,ERR=3750)E1$ ELSE PGMCTL=UNT,E1=PGMCTL,E1$=FILE_NAME$; OPEN (E1,IOL=*,ERR=3750)E1$
3720 IF SOA_FILE$="VI0XRF.SOA" THEN DIR$="VI" ELSE DIR$="SOA" END_IF ; CALL "SYPATH",TERM$,DIR$; IF DIR$="ERR" THEN GOTO 3750
3730 IF NOT(%SYS_SS) THEN SOACTL=UNT,E1=SOACTL,E1$=SOA_FILE$; OPEN (E1,ERR=3750)E1$ ELSE IF SOA_FILE$="providex.dcl" THEN SOACTL=UNT,E1=SOACTL,E1$="..\"+SOA_FILE$; OPEN (E1,ERR=3750)E1$ ELSE SOACTL=%SYS_SS'OPENTABLE(SOA_FILE$,TBL(UCS(MID(SOA_FILE$,-4,4))=".SOA","SYSTEM","SOA"),ERR=3750)
3740 NO_OPEN=0
3750 RETURN 
3760 ! 
3770 ! **********************************************************************
3780 ADD_APP_TO_COMPILE:
3790 ! 
3800 ! CHECK TO ADD APP TO COMPILE STRING
3810 IF CMP_STRING$="" THEN CMP_STRING$=APP$; GOTO 3840
3820 CMP_NOT_FOUND=1; FOR CMP_CHK=1 TO (LEN(CMP_STRING$)-1) STEP 2; IF CMP_STRING$(CMP_CHK,2)=APP$ THEN CMP_NOT_FOUND=0 END_IF ; NEXT CMP_CHK
3830 IF CMP_NOT_FOUND THEN CMP_STRING$=CMP_STRING$+APP$
3840 RETURN 
3850 ! 
3860 ! **********************************************************************
3870 COMPILE_DICTIONARY:
3880 ! 
3890 SETERR 10060
3910 IF NOT(NUL(CMP_STRING$)) THEN {
3911 SETERR 10060
3920 FOR COMPILE=1 TO (LEN(CMP_STRING$)-1); APP$=CMP_STRING$(COMPILE,2)
3950 %RECOMPILE_FLG=1,V$=APP$(1,1)+"/"+APP$(2,1),S2$=TERM$; CALL "SVCMPL",ERR=*NEXT,V$,S2$
3970 NEXT COMPILE
3980  }
3990 RETURN 
4000 ! 
4010 ! **********************************************************************
4020 ERASE_FILE:
4030 ! 
4040 DIR$=PATH$; CALL "SYPATH",TERM$,DIR$; IF DIR$="ERR" THEN GOTO 4060
4050 E1$=FILE_NAME$; ERASE FILE_NAME$,ERR=4060; E1$=""
4060 RETURN 
4070 ! 
4080 ! **********************************************************************
4090 REMOVE_ENTRY:
4100 ! 
4110 ! REMOVE AN ENTRY FROM THE SYSTEM FILE, PRIOR TO WRITING NEW RECORDS
4120 E1=SOACTL,E2$=DEL_KEY$; READ (E1,KEY=E2$,DOM=4130,END=4160)
4130 E1=SOACTL,E2$=KEY(E1,END=4160)
4140 IF E2$(1,LEN(DEL_KEY$))<>DEL_KEY$ THEN GOTO 4160
4150 REMOVE (E1,KEY=E2$); GOTO 4130
4160 RETURN 
4170 ! 
4180 ! **********************************************************************
9900 SUMDIN_EXIT: ! 9900
9905 ! PERFORM "DSDCAA;CHECK_FOR_GRAPHICS" ! DSD ONLY
9910 ! 
9940 ! IF CMP_STRING$<>""   THEN GOSUB COMPILE_DICTIONARY
9950 ! 
9960 ! IF A PROGRESS METER EXISTS, KILL IT
9970 CALL "SWPROG",2,0,0,"","",TERM$,""
9980 ! 
10010 ! 
10030 %SYS_GUIPROG=SAVE_SYS_GUIPROG
10040 ! 
10070 IF MDCTL THEN CLOSE (MDCTL)
10080 IF DICTL THEN CLOSE (DICTL)
10090 IF PATHCTL THEN CLOSE (PATHCTL)
10100 IF SOACTL THEN CLOSE (SOACTL)
10110 IF PGMCTL THEN CLOSE (PGMCTL)
10120 IF CTLCHN THEN CLOSE (CTLCHN)
10130 PATH$="SOA",FILE_NAME$="MDINST"; GOSUB ERASE_FILE
10140 EXIT 
10150 ! 
10160 ! **********************************************************************
10170 ERR_TRAP:
10180 ! 
10190 E0=ERR,E3$="SUMDI4",E3=TCB(5)
10200 CALL "SYERRM",E0$,E1$,E2$,E3$,E0,E1,E3,E5,E6,E7,E8$
10210 IF E3$="E" THEN SETERR 0000; SETESC 0000; RETRY 
10220 IF E3$="R" THEN SETERR 0001; RETRY 
10230 IF E3$="X" THEN GOTO SUMDIN_EXIT
10240 RETURN 
10250 ESC_TRAP:
10260 ! 
10270 RETURN 
11150 ! 
14990 ! 
15000 ! ************************ 3.50 ADDITIONS ******************************
15010 ! ----------------------------------------------------------------------
15020 UPDATE_SY0DD2:
15030 ! 
15035 ! SY0DD2 INSTALL
15040 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0DD2."+ENH_CODE$,SOA_FILE$="sy0dd2.soa",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 15180
15050 ! 
15060 P2$="SY0DD2",P3$=""
15065 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
15070 ! 
15080 DD2_OK=1,LAST_FILE$=""
15090 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=15100)
15100 E1=PGMCTL,K$=KEY(E1,END=15180)
15110 IF LAST_FILE$<>K$(1,6) THEN DEL_KEY$=K$(1,6); GOSUB REMOVE_ENTRY; LAST_FILE$=K$(1,6)
15120 E1=PGMCTL,E2$=K$; READ RECORD (E1,KEY=E2$)DD2$
15130 ! 
15150 ! 
15160 E1=SOACTL,E2$=K$; WRITE RECORD (E1,KEY=E2$)DD2$
15170 GOTO 15100
15180 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
15190 IF SOACTL<>0 THEN CLOSE (SOACTL)
15200 IF DD2_OK THEN GOSUB ERASE_FILE
15210 GOSUB UPDATE_WINDOW
15220 RETURN 
15221 ! 
15230 UPDATE_SY1Q01:
15240 ! 
15250 ! Q01
15251 ! 
15260 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0Q01."+ENH_CODE$,SOA_FILE$="sy1q01.soa",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 15400
15270 ! 
15280 P2$="SY1Q01",P3$=""
15285 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
15290 ! 
15300 Q01_OK=1,LAST_FILE$=""
15310 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=15320)
15320 E1=PGMCTL,K$=KEY(E1,END=15400)
15340 E1=PGMCTL,E2$=K$; READ RECORD (E1,KEY=E2$)Q01$
15341 ASI=1; REMOVE_ALE$=E2$; GOSUB CLEAR_ALE_QUERY ! PLWhirley - 4/5/07 clear all old records out so we don't have extraneous records
15350 ! 
15370 ! 
15380 E1=SOACTL,E2$=K$; WRITE RECORD (E1,KEY=E2$)Q01$
15390 GOTO 15320
15400 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
15410 IF SOACTL<>0 THEN CLOSE (SOACTL)
15420 IF Q01_OK THEN GOSUB ERASE_FILE
15430 GOSUB UPDATE_WINDOW
15440 ! 
15450 ! Q02
15460 ! 
15470 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0Q02."+ENH_CODE$,SOA_FILE$="sy1q02.soa",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 15600
15480 ! 
15490 P2$="SY1Q02",P3$=""
15495 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
15500 ! 
15510 Q02_OK=1,LAST_FILE$=""
15520 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=15530)
15530 E1=PGMCTL,K$=KEY(E1,END=15600)
15540 E1=PGMCTL,E2$=K$; READ RECORD (E1,KEY=E2$)Q02$
15550 ! 
15570 ! 
15580 E1=SOACTL,E2$=K$; WRITE RECORD (E1,KEY=E2$)Q02$
15590 GOTO 15530
15600 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
15610 IF SOACTL<>0 THEN CLOSE (SOACTL)
15620 IF Q02_OK THEN GOSUB ERASE_FILE
15630 GOSUB UPDATE_WINDOW
15640 ! 
15650 ! 
15660 ! Q03
15670 ! 
15680 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0Q03."+ENH_CODE$,SOA_FILE$="sy1q03.soa",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 15810
15690 ! 
15700 P2$="SY1Q03",P3$=""
15705 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
15710 ! 
15720 Q03_OK=1,LAST_FILE$=""
15730 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=15740)
15740 E1=PGMCTL,K$=KEY(E1,END=15810)
15750 E1=PGMCTL,E2$=K$; READ RECORD (E1,KEY=E2$)Q03$
15760 ! 
15780 ! 
15790 E1=SOACTL,E2$=K$; WRITE RECORD (E1,KEY=E2$)Q03$
15800 GOTO 15740
15810 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
15820 IF SOACTL<>0 THEN CLOSE (SOACTL)
15830 IF Q03_OK THEN GOSUB ERASE_FILE
15840 GOSUB UPDATE_WINDOW
15850 ! 
15860 ! Q04
15870 ! 
15880 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0Q04."+ENH_CODE$,SOA_FILE$="sy1q04.soa",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 16010
15890 ! 
15900 P2$="SY1Q04",P3$=""
15905 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
15910 ! 
15920 Q04_OK=1,LAST_FILE$=""
15930 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=15940)
15940 E1=PGMCTL,K$=KEY(E1,END=16010)
15950 E1=PGMCTL,E2$=K$; READ RECORD (E1,KEY=E2$)Q04$
15960 ! 
15980 ! 
15990 E1=SOACTL,E2$=K$; WRITE RECORD (E1,KEY=E2$)Q04$
16000 GOTO 15940
16010 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
16020 IF SOACTL<>0 THEN CLOSE (SOACTL)
16030 IF Q04_OK THEN GOSUB ERASE_FILE
16040 GOSUB UPDATE_WINDOW
16050 ! 
16070 ! QDD
16080 ! 
16090 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0QDD."+ENH_CODE$,SOA_FILE$="sy1qdd.soa",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 16220
16100 ! 
16110 P2$="SY1QDD",P3$=""
16115 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
16120 ! 
16130 QDD_OK=1,LAST_FILE$=""
16140 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=16150)
16150 E1=PGMCTL,K$=KEY(E1,END=16220)
16160 E1=PGMCTL,E2$=K$; READ RECORD (E1,KEY=E2$)QDD$
16170 ! 
16190 ! 
16200 E1=SOACTL,E2$=K$; WRITE RECORD (E1,KEY=E2$)QDD$
16210 GOTO 16150
16220 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
16230 IF SOACTL<>0 THEN CLOSE (SOACTL)
16240 IF QDD_OK THEN GOSUB ERASE_FILE
16250 GOSUB UPDATE_WINDOW
16260 ! 
16270 RETURN 
16280 ! 
16290 UPDATE_SY0DD4:
16300 ! 
16310 ! 
16320 ! DD4
16330 ! 
16340 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0DD4."+ENH_CODE$,SOA_FILE$="sy0dd4.soa",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 16470
16350 ! 
16360 P2$="SY0DD4",P3$=""
16370 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
16380 ! 
16390 DD4_OK=1,LAST_FILE$=""
16400 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=16410)
16410 E1=PGMCTL,K$=KEY(E1,END=16470)
16420 E1=PGMCTL,E2$=K$; READ RECORD (E1,KEY=E2$)DD4$
16430 ! 
16440 ! 
16450 E1=SOACTL,E2$=K$; WRITE RECORD (E1,KEY=E2$)DD4$
16460 GOTO 16410
16470 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
16480 IF SOACTL<>0 THEN CLOSE (SOACTL)
16490 IF DD4_OK THEN GOSUB ERASE_FILE
16500 GOSUB UPDATE_WINDOW
16510 ! 
16520 ! 
16530 ! DD5
16540 ! 
16550 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0DD5."+ENH_CODE$,SOA_FILE$="sy0dd5.soa",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 16680
16560 ! 
16570 P2$="SY0DD5",P3$=""
16580 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
16590 ! 
16600 DD5_OK=1,LAST_FILE$=""
16610 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=16620)
16620 E1=PGMCTL,K$=KEY(E1,END=16680)
16630 E1=PGMCTL,E2$=K$; READ RECORD (E1,KEY=E2$)DD5$
16640 ! 
16650 ! 
16660 E1=SOACTL,E2$=K$; WRITE RECORD (E1,KEY=E2$)DD5$
16670 GOTO 16620
16680 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
16690 IF SOACTL<>0 THEN CLOSE (SOACTL)
16700 IF DD5_OK THEN GOSUB ERASE_FILE
16710 GOSUB UPDATE_WINDOW
16720 ! 
16730 RETURN 
16740 ! 
16741 UPDATE_DCL:
16750 ! Added for ProvideX Data Class Maintenance (11/11/05) (CJS)
16751 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0DCL."+ENH_CODE$,SOA_FILE$="providex.dcl",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 16880 ! 08/17/06 (JCR)
16760 DCL: IOLIST CLS_NAME$,CLS_DESC$,CLS_TYPE$,CLS_LEN$,CLS_OBJ_TYPE$,CLS_OBJ_VAL$,CLS_OBJ_DEF$,CLS_OBJ_LEN$,CLS_OBJ_OPT$,CLS_OBJ_TBL$,CLS_OBJ_FMT$,CLS_OBJ_NUL$,CLS_OBJ_INP$,CLS_OBJ_OUT$,CLS_OBJ_VALID$,CLS_OBJ_TAG$,CLS_OBJ_QRY$,CLS_OBJ_POPUP$,CLS_OBJ_POPUP_LOGIC$,CLS_OBJ_QRY_BITMAP$,CLS_OBJ_QRY_WIDTH,CLS_OBJ_QRY_TIP$,CLS_OBJ_QRY_ATTR$,CLS_EXTENSION$ ! 08/17/06 (JCR)
16770 P2$="providex.dcl",P3$="" ! 08/17/06 (JCR)
16780 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
16790 ! 
16800 DCL_OK=1,LAST_FILE$=""
16810 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=16820)
16820 E1=PGMCTL,K$=KEY(E1,END=16880)
16830 E1=PGMCTL,E2$=K$; READ RECORD (E1,KEY=E2$)DCL$
16840 READ DATA FROM DCL$ TO IOL=DCL ! 08/17/06 (JCR)
16860 E1=SOACTL,E2$=K$; WRITE (E1)IOL=DCL ! 08/17/06 (JCR)
16870 GOTO 16820
16880 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
16890 IF SOACTL<>0 THEN CLOSE (SOACTL)
16900 IF DCL_OK THEN GOSUB ERASE_FILE
16910 GOSUB UPDATE_WINDOW
16920 ! 
16930 RETURN 
20000 FIND_SUCMPL: ! ADDED BY JCR (01/15/01)
20010 ! 
20020 SUCMPL_OK=0,SUCMPL_E1=HFN,E1$="SUCMPL"; OPEN (SUCMPL_E1,ERR=*NEXT)E1$; CLOSE (SUCMPL_E1); SUCMPL_OK=1
20030 RETURN 
20040 ! 
20100 ! **********************************************************************
20110 ! !3.61 mods
20120 ! **********************************************************************
20130 ! 
20140 CHANGES_361:
20150 ! 
20160 PATH$="SOA",FILE_NAME$="DSDCHK."+ENH_CODE$; GOSUB ERASE_FILE
20170 PATH$="SOA",FILE_NAME$="DSDFIX."+ENH_CODE$; GOSUB ERASE_FILE
20180 ! LET PATH$=BASE_APP$,FILE_NAME$=BASE_APP$+"ZCAA."+ENH_CODE$; GOSUB ERASE_FILE ! dummy conversion program must exist
20190 PATH$=BASE_APP$,FILE_NAME$="CAA"+ENH_CODE$+".LIB"; GOSUB ERASE_FILE
20200 ! 
20210 RETURN 
20220 ! 
20230 GET_TARGET_DIR:
20240 ! 
20250 ! %SYS_CS_ROOT IS USED TO CHK FOR CS INSTEAD OF %SYS_WDX BECAUSE OF BEHAVIOR RUNNING ON THE SERVER ITSELF
20260 IF %SYS_CS_ROOT$<>"" THEN {
20270 TARGETDIR$=%SYS_CS_ROOT$
20290  } ELSE {
20300 TARGETDIR$=HWD,TARGETDIR$=TARGETDIR$(1,LEN(TARGETDIR$)-5)
20320  }
20330 RETURN 
20340 ! 
20350 CHANGES_370:
20360 ! 
20370 PATH$="SOA",FILE_NAME$="DSDCHK.LIC"; GOSUB ERASE_FILE
20410 ! 
20420 RETURN 
20430 ! 
20440 UPDATE_4X_FILES:
20450 ! 
20470 GOSUB SY_MODULE_INSTALL
20472 GOSUB PROVIDEX_DDF_INSTALL ! DSD:CJS
20475 GOSUB SY_TASK_INSTALL
20480 GOSUB SY_ENHANCEMENT_INSTALL
20481 GOSUB SY_MEMOMANAGER_INSTALL
20482 GOSUB SY_BATCHMANAGER_INSTALL
20483 GOSUB SY_REPORTMASTER_INSTALL
20484 GOSUB SY_REPORTTEMPLATE_INSTALL
20485 GOSUB SY_DEFAULTPERFORM_INSTALL
20486 GOSUB SY_MEMODEFAULT_INSTALL ! (CJS) 01/19/07
20490 GOSUB SY_CLASSENHANCEMENT_INSTALL
20491 GOSUB SY_DEFAULTPERFORM_INSTALL
20492 GOSUB IT_EMAIL_INSTALL
20493 GOSUB IT_EMAILTOKEN_INSTALL
20494 GOSUB IT_EMAILNOTI_INSTALL
20495 GOSUB CM_ENTITY_INSTALL
20496 GOSUB CM_UDF_INSTALL
20497 GOSUB SY_MESSAGE_INSTALL
20500 GOSUB SY_GRIDDEFINITION_INSTALL
20501 GOSUB SY_EXPORTLINK_INSTALL
20503 GOSUB CM_ENTITY_INSTALL
20504 GOSUB SY_CONTEXT_INSTALL ! DSD:CJS
20505 GOSUB VI0XRF_INSTALL
20506 GOSUB ADDITIONAL_FILES
20507 IF %SYS_SS THEN GOSUB UPDATE_REMOVE_TASK; GOSUB UPDATE_REMOVE_MODULE_MENU ! 02/17/06 (JCR) 11/05/07 (JCR)
20510 RETURN 
20520 ! 
20530 ADDITIONAL_FILES:
20540 ! Overflow for UPDATE_4X_FILES because renumbering is wack
20550 GOSUB SY_POPUPITEM_INSTALL
20560 GOSUB SY_POPUPMENUITEM_INSTALL
20570 GOSUB SY_PopupMenu_INSTALL
20580 GOSUB SY_PopupXref_INSTALL
20581 GOSUB INSTALL_PAL
20585 GOSUB INSTALL_PROGRAM_PATCH_FILE
20590 RETURN 
20600 ! 
21000 SY_TASK_INSTALL: ! Rewritten 03/19/07 (JCR)
21001 ! 
21010 PGMCTL=0,PGMCTL2=0,SOACTL=0,MENU_INSTALL=0,MENU_SOA=0
21020 NO_OPEN=1,FILE_NAME$=BASE_APP$+"_Task."+ENH_CODE$,SOA_FILE$="SY_Task",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO END_NEW_SY_TASK_MENU_INSTALL
21030 PGMCTL2=UNT,E1=PGMCTL2,E1$=FILE_NAME$; OPEN (E1,IOL=*)E1$
21040 MENU_OPEN=0,FILE_NAME2$=BASE_APP$+"_Menu."+ENH_CODE$,MENU_INSTALL=UNT,E1=MENU_INSTALL,E1$=FILE_NAME2$; OPEN (E1,IOL=*,ERR=*NEXT)E1$; MENU_OPEN=1
21050 ! 
21060 P2$="SY_Task",P3$=""; PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),; TASK_OK=1,LAST_FILE$=""
21070 ! 
21080 SELECT *,REC=PGM$ FROM PGMCTL BEGIN $$ END $FE$
21090 ASI=1; IF POS(PGM.TASKOWNER$="0129")=0 THEN GOTO NEXT_TASK_INSTALL ! added 9 - save user records ! IF POS(PGM.TASKOWNER$="012")=0 THEN GOTO NEXT_TASK_INSTALL ! Skip User records (Type 9)
21100 OLD_TASK_ID$=PGM.TASKID$
21110 GOSUB NEW_SY_TASK_CHECK
21120 IF TASK_ID$<>"" THEN {
21130 PGM.TASKID$=SOA.TASKID$ ! Task already exists
21140  } ELSE {
21150 PGM.TASKID$=STR(NUM(SOA.TASKID$)+1:"000") ! No Task exists, so write to next slot...
21160 GOSUB NEW_SY_TASK_CHECK2 ! ...but first check existing install to see if slot already used
21170  }
21180 E1=SOACTL; WRITE (E1,REC=PGM$)
21190 REMOVE (PGMCTL,KEY=PGM.MODULENUMBER$:PGM.TASKOWNER$:PGM.DEVELOPERCODE$:OLD_TASK_ID$,DOM=*NEXT)
21200 IF MENU_OPEN AND OLD_TASK_ID$<>PGM.TASKID$ THEN GOSUB NEW_SY_MENU_RESYNC
21210 NEXT_TASK_INSTALL: NEXT RECORD 
21220 END_NEW_SY_TASK_MENU_INSTALL:
21230 IF PGMCTL THEN CLOSE (PGMCTL); PGMCTL=0
21240 IF PGMCTL2 THEN CLOSE (PGMCTL2); PGMCTL2=0
21250 IF SOACTL THEN CLOSE (SOACTL); SOACTL=0
21260 IF MENU_INSTALL THEN CLOSE (MENU_INSTALL); MENU_INSTALL=0
21270 IF TASK_OK THEN GOSUB ERASE_FILE
21280 GOSUB UPDATE_WINDOW
21290 RETURN 
21300 ! 
21310 NEW_SY_TASK_CHECK: ! This routine checks to see if Task already installed, if not, then set the next Task ID Available
21320 ! 
21330 TASK_ID$="",SOA.TASKID$=""
21340 SELECT *,REC=SOA$ FROM SOACTL BEGIN PGM.MODULENUMBER$+PGM.TASKOWNER$+PGM.DEVELOPERCODE$+$$ END PGM.MODULENUMBER$+PGM.TASKOWNER$+PGM.DEVELOPERCODE$+$FE$
21350 IF PGM.TASKOWNER$="1" AND NOT(NUL(PGM.TASKNAME$)) THEN IF PGM.TASKNAME$=SOA.TASKNAME$ THEN TASK_ID$=SOA.TASKID$; EXITTO 21380 ELSE GOTO 21370 ! Submenu or Menu
21360 ASI=1; IF (PGM.PROGRAMNAME$=SOA.PROGRAMNAME$ AND PGM.TASKOWNER$<>"9") THEN TASK_ID$=SOA.TASKID$; EXITTO 21380 ! IF PGM.PROGRAMNAME$=SOA.PROGRAMNAME$ THEN LET TASK_ID$=SOA.TASKID$; EXITTO 21380
21370 NEXT RECORD 
21390 RETURN 
21400 ! 
21410 NEW_SY_TASK_CHECK2: ! This routine checks to see if NEW Task ID already exists in install file.
21420 ! 
21430 NEW_TASK_ID=NUM(PGM.TASKID$)
21440 NEXT_CHECK2_SCAN: NEW_TASK_ID$=STR(NEW_TASK_ID:"000")
21450 READ (PGMCTL2,REC=PGM2$,KEY=PGM.MODULENUMBER$:PGM.TASKOWNER$:PGM.DEVELOPERCODE$:NEW_TASK_ID$,DOM=END_CHECK2_SCAN)
21460 NEW_TASK_ID+=1
21470 GOTO NEXT_CHECK2_SCAN
21480 END_CHECK2_SCAN:
21490 PGM.TASKID$=NEW_TASK_ID$
21500 RETURN 
21510 ! 
21520 NEW_SY_MENU_RESYNC: ! This routine updates MM_Menu.EEE with changes to Task ID
21530 ! 
21540 OLD_MENU_ID$=PGM.MODULENUMBER$+PGM.TASKOWNER$+PGM.DEVELOPERCODE$+OLD_TASK_ID$
21550 NEW_MENU_ID$=PGM.MODULENUMBER$+PGM.TASKOWNER$+PGM.DEVELOPERCODE$+PGM.TASKID$
21560 SELECT *,REC=MNU$ FROM MENU_INSTALL BEGIN $$ END $FE$ WHERE MNU.TASKKEY$=OLD_MENU_ID$
21570 REMOVE (MENU_INSTALL,KEY=MNU.MODULECODE$:MNU.TASKKEY$:MNU.SEQUENCE$,DOM=*NEXT)
21580 MNU.TASKKEY$=NEW_MENU_ID$
21590 WRITE (MENU_INSTALL,REC=MNU$)
21600 NEXT RECORD 
21610 ! Now rescan and update Parent Task Keys if applicable
21620 SELECT *,REC=MNU$ FROM MENU_INSTALL BEGIN $$ END $FE$ WHERE MNU.PARENTTASKKEY$=OLD_MENU_ID$
21630 MNU.PARENTTASKKEY$=NEW_MENU_ID$
21640 WRITE (MENU_INSTALL,REC=MNU$)
21650 NEXT RECORD 
21660 RETURN 
21670 ! 
25500 SY_MODULE_INSTALL:
25510 ! 
25520 NO_OPEN=1,FILE_NAME$=BASE_APP$+"_Module."+ENH_CODE$,SOA_FILE$="SY_Module",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 25620
25530 ! 
25540 P2$="SY_Module",P3$=""
25550 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
25560 ! 
25570 MODULE_OK=1,LAST_FILE$=""
25580 ! 
25590 SELECT * FROM PGMCTL BEGIN $$ END $FE$ ! 09/15/04 (JCR)
25600 E1=SOACTL; WRITE (E1)
25605 GOSUB UPDATE_MODULE_TO_CTL ! 10/13/04 (JCR)
25610 NEXT RECORD 
25620 CLOSE (PGMCTL,ERR=*NEXT)
25630 CLOSE (SOACTL,ERR=*NEXT)
25640 IF MODULE_OK THEN GOSUB ERASE_FILE
25650 GOSUB UPDATE_WINDOW
25660 RETURN 
25990 ! 
26000 SY_ENHANCEMENT_INSTALL:
26010 ! 
26020 NO_OPEN=1,FILE_NAME$=BASE_APP$+"_Enhancement."+ENH_CODE$,SOA_FILE$="SY_Enhancement",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 26120
26030 ! 
26040 P2$="SY_Enhancement",P3$=""
26050 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
26060 ! 
26070 ENHANCEMENT_OK=1,LAST_FILE$=""
26080 ! May need some checking here for duplicate Enhancements
26090 SELECT * FROM PGMCTL BEGIN $$ END $FE$ ! 09/15/04 (JCR)
26100 E1=SOACTL; WRITE (E1)
26110 NEXT RECORD 
26120 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
26130 IF SOACTL<>0 THEN CLOSE (SOACTL)
26140 IF ENHANCEMENT_OK THEN GOSUB ERASE_FILE
26150 GOSUB UPDATE_WINDOW
26160 RETURN 
26490 ! 
26500 SY_CLASSENHANCEMENT_INSTALL:
26510 ! 
26520 NO_OPEN=1,FILE_NAME$=BASE_APP$+"_ClassEnhancement."+ENH_CODE$,SOA_FILE$="SY_ClassEnhancement",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 26630
26530 ! 
26540 P2$="SY_ClassEnhancement",P3$=""
26550 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
26560 ! 
26561 ! LET PGMCTLK$=IOL(PGMCTL); LET SOACTLK$=IOL(SOACTL) REMOVED (CJS)
26562 ! IF PGMCTLK$<>SOACTLK$   THEN GOSUB CONVERT_CLENH   REMOVED (CJS)
26570 CLSENH_OK=1,LAST_FILE$=""
26580 ! May need some checking here for duplicate Classes
26590 SELECT * FROM PGMCTL BEGIN $$ END $FE$ ! 09/15/04 (JCR)
26600 E1=SOACTL; REMOVE (E1,KEY=MODULECODE$+DeveloperCode$+PAD(enhancementcode$,10)+classmodulecode$+classdevelopercode$+standardclass$,DOM=*NEXT) ! 12/22/06 (JCR) 06/15/07 (CJS)
26605 enhancementcode$=STP(enhancementcode$) ! 12/22/06 (JCR)
26610 E1=SOACTL; WRITE (E1)
26620 NEXT RECORD 
26630 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
26640 IF SOACTL<>0 THEN CLOSE (SOACTL)
26650 IF CLSENH_OK THEN GOSUB ERASE_FILE
26660 GOSUB UPDATE_WINDOW
26670 RETURN 
26690 ! 
26890 ! 
26900 SY_MENU_INSTALL:
26910 ! 
26920 NO_OPEN=1,FILE_NAME$=BASE_APP$+"_Menu."+ENH_CODE$,SOA_FILE$="SY_Menu",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 27070
26930 PGMCTL2=UNT,E1=PGMCTL2,E1$=FILE_NAME$; OPEN (E1,IOL=*)E1$ ! 03/19/07 (JCR)
26940 P2$="SY_Menu",P3$=""
26950 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
26960 MNU_OK=1,LAST_FILE$=""
26965 GOSUB SY_MENU_SUBMENU ! 03/19/07 (JCR)
26970 SELECT *,REC=PGM$ FROM PGMCTL,KNO="kPrimary" BEGIN $$ END $FE$ ! 09/15/04 (JCR)
26971 IF NUL(PGM.PARENTMODULECODE$) THEN { ! Could be a module, they have no parents
26972 E1=SOACTL; WRITE (E1,REC=PGM$); GOTO 27060
26973  }
26990 CURRENT_POSITION$="",POSITION=0
27000 SELECT *,REC=SOA$ FROM SOACTL,KNO="kParentOTF" BEGIN PGM.PARENTMODULECODE$+PGM.PARENTTASKKEY$+$$ END PGM.PARENTMODULECODE$+PGM.PARENTTASKKEY$+$FE$ ! 09/15/04 (JCR)
27010 IF SOA.TASKKEY$=PGM.TASKKEY$ THEN CURRENT_POSITION$=SOA.POSITION$
27020 IF NUM(SOA.POSITION$)>POSITION THEN POSITION=NUM(SOA.POSITION$)
27030 NEXT RECORD 
27040 IF CURRENT_POSITION$<>"" THEN PGM.POSITION$=CURRENT_POSITION$ ELSE PGM.POSITION$=STR(POSITION+1:"0000000000")
27050 E1=SOACTL; WRITE (E1,REC=PGM$)
27060 NEXT RECORD 
27070 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
27075 IF PGMCTL2<>0 THEN CLOSE (PGMCTL2) ! 03/19/07 (JCR)
27080 IF SOACTL<>0 THEN CLOSE (SOACTL)
27090 IF MNU_OK THEN GOSUB ERASE_FILE
27100 GOSUB UPDATE_WINDOW
27120 RETURN 
27130 ! 
27200 SY_MENU_SUBMENU: ! This installs submenus and their menu items first 03/19/07 (JCR)
27210 ! 
27220 SELECT *,REC=PGM$ FROM PGMCTL,KNO="kPosition" BEGIN $$ END $FE$ WHERE MID(PGM.TASKKEY$,3,1)="1"
27230 OLD.Position$=PGM.POSITION$,SOA.POSITION$=$$
27240 SELECT *,REC=SOA$ FROM SOACTL,KNO="kPosition" BEGIN PGM.POSITION$+$$ END $FE$ WHERE SOA.ModuleCode$=PGM.ModuleCode$ AND MID(SOA.TASKKEY$,3,1)="1"
27250 IF SOA.MenuName$=PGM.MenuName$ THEN PGM.POSITION$=SOA.POSITION$; EXITTO 27280
27260 NEXT RECORD 
27270 IF SOA.POSITION$<>$$ THEN PGM.POSITION$=STR(NUM(SOA.POSITION$)+1:"0000000000")
27280 E1=SOACTL; WRITE (E1,REC=PGM$) ! Write SubManu Record
27290 REMOVE (PGMCTL2,KEY=PGM.ModuleCode$:PGM.TASKKEY$:PGM.Sequence$,DOM=*NEXT)
27300 ! Install menu items on sub menu
27310 SELECT *,REC=PGM2$ FROM PGMCTL2,KNO="kPosition" BEGIN $$ END $FE$ WHERE PGM2.PARENTTASKKEY$=PGM.TASKKEY$ ! AND PGM2.ParentPosition$=OLD.Position$
27320 CURRENT_POSITION$="",POSITION=0,PGM2.ParentPosition$=PGM.POSITION$ ! set new parent position
27330 SELECT *,REC=SOA$ FROM SOACTL,KNO="kParentOTF" BEGIN PGM2.PARENTMODULECODE$+PGM2.PARENTTASKKEY$+$$ END PGM2.PARENTMODULECODE$+PGM2.PARENTTASKKEY$+$FE$
27340 IF SOA.TASKKEY$=PGM2.TaskKey$ THEN CURRENT_POSITION$=SOA.POSITION$
27350 IF NUM(SOA.POSITION$)>POSITION THEN POSITION=NUM(SOA.POSITION$)
27360 NEXT RECORD 
27370 IF CURRENT_POSITION$<>"" THEN PGM2.POSITION$=CURRENT_POSITION$ ELSE PGM2.POSITION$=STR(POSITION+1:"0000000000")
27380 E1=SOACTL; WRITE (E1,REC=PGM2$) ! Write menu item for SubMenu
27390 REMOVE (PGMCTL2,KEY=PGM2.ModuleCode$:PGM2.TaskKey$:PGM2.Sequence$,DOM=*NEXT)
27400 NEXT RECORD ! Next menu item on SubMenu
27410 NEXT RECORD ! Next SubMenu
27420 RETURN 
27430 ! 
29000 SY_EXPORTLINK_INSTALL:
29010 ! 
29020 NO_OPEN=1,FILE_NAME$=BASE_APP$+"_ExportLink."+ENH_CODE$,SOA_FILE$="SY_ExportLink",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 29120
29030 ! 
29040 P2$="SY_ExportLink",P3$=""
29050 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
29060 ! 
29070 EXPORTLINK_OK=1,LAST_FILE$=""
29080 ! 
29090 SELECT * FROM PGMCTL BEGIN $$ END $FE$ ! 09/15/04 (JCR)
29100 E1=SOACTL; WRITE (E1)
29110 NEXT RECORD 
29120 CLOSE (PGMCTL,ERR=*NEXT)
29130 CLOSE (SOACTL,ERR=*NEXT)
29140 IF EXPORTLINK_OK THEN GOSUB ERASE_FILE
29150 GOSUB UPDATE_WINDOW
29160 RETURN 
29170 ! 
29370 ! 
29500 UPDATE_MODULE_TO_CTL: ! 10/13/04 (JCR)
29501 ! 
29510 CTLCHN=6,E1=CTLCHN,E1$="SY0CTL.SOA"; CLOSE (E1); OPEN (E1)E1$
29520 DIM CTL$(127); CTL$(1,1)="l",CTL$(2,3)=MODULECODE$,CTL$(5,10)=PARTNUMBER$,CTL$(15,35)=MODULENAME$,CTL$(50,10)=STR(MODULELEVEL:"0.00",ERR=*PROCEED),CTL$(74,4)=STR(CONVERSIONLEVEL:"0.00",ERR=*PROCEED),CTL$(66,1)="Y",CTL$(71,3)=BUILDNUMBER$,CTL$(78,1)="N"
29530 DIM CONV_DATE$(6); CALL "SYDATE","c",RELEASEDATE$,CONV_DATE$,X9,TERM$; CTL$(60,6)=CONV_DATE$
29540 E1=CTLCHN,E2$=CTL$(1,4); WRITE (E1,KEY=E2$)CTL$
29550 RETURN 
29560 ! 
29570 PROVIDEX_DDF_INSTALL:
29580 ! 
29585 IF BASE_APP$="IN" THEN GOSUB RENAME_DDF_DDE ! 09/20/06 CJS
29590 NO_OPEN=1,FILE_NAME$="providex.ddf",PGMCTL=0
29600 DIR$=PATH$; CALL "SYPATH",TERM$,DIR$; IF DIR$="ERR" THEN NO_OPEN=1; GOTO OPENDDFEXIT
29603 home_path$=HWD; mas_path$=home_path$(1,POS("\HOME"=UCS(home_path$))-1)
29606 E1$=mas_path$+"\"+DIR$+"\"+FILE_NAME$
29610 PGMCTL=UNT,E1=PGMCTL; OPEN (E1,IOL=*,ERR=OPENDDFEXIT)E1$; CLOSE (E1); PGMCTL=0; NO_OPEN=0
29620 OPENDDFEXIT: IF NO_OPEN THEN GOTO OPENDDFDONE
29630 ! 
29640 P2$="ProvideX Database",P3$=""
29650 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
29660 ! 
29670 PVXDDF_OK=1,LAST_FILE$=""
29690 IF MAS_DDF THEN MAS_DDF'SetDatabase(mas_path$) ELSE GOTO 30140
29700 enh_ddf$=mas_path$+"\"+DIR$ ! 09/15/06 CJS
29710 tmp=ENH_DDF'SetDatabase(enh_ddf$)
29730 IF (tmp) THEN {
29740 ! First, enumerate the tables in the ENH ddf
29750 tCount=ENH_DDF'GetTableCount()
29760 IF tCount THEN {
29770 ! Start a Table Update loop
29780 FOR loop1=1 TO tCount
29790 tName$=ENH_DDF'GetTableName$(loop1)
29800 ! See if the table already exists in the MAS DDF
29812 tInfo=MAS_DDF'GetTableInfo(tName$)
29814 IF tInfo THEN {
29816 eInfo=ENH_DDF'GetTableInfo(tName$)
29818 IF eInfo THEN { tmp=MAS_DDF'UpdateTable(eInfo) }
29820  } ELSE {
29821 eInfo=ENH_DDF'GetTableInfo(tName$) ! PATCHED IN 07/08/07 (CJS)
29822 tmp=MAS_DDF'AddTable(eInfo) }
29824 ! } ! 11/07/07 (CJS) Added/changed lines 29812 to 29822 12/1/07 (JCR) MOVED TO 29824 IF DDE/DDF HAS NO TABLES
29830 ! Update/Add Varaint Info, If Any...
29840 tempVI=ENH_DDF'GetVariantInfo(tName$); IF tempVI THEN tmp=MAS_DDF'UpdateVariant(tName$,tempVI) ! 05-21-08 (CJS) Error 36 fix
29850 ! Next Get the Column Info for this Table Name
29860 cCount=ENH_DDF'GetColumnCount(tName$)
29870 IF cCount THEN {
29880 FOR loop2=1 TO cCount
29890 ! Start the Column Update
29900 colInfo=ENH_DDF'GetColumnInfo(tName$,loop2)
29910 ! Check if Column Name exists in MAS Database
29920 masCol=MAS_DDF'GetColumnInfo(tName$,colInfo'Name$)
29930 IF masCol THEN tmp=MAS_DDF'UpdateColumn(tName$,colInfo) ELSE tmp=MAS_DDF'AddColumn(tName$,colInfo)
29940 NEXT loop2
29950  }
29960 ! Last, the Index updates
29970 iCount=ENH_DDF'GetIndexCount(tName$)
29980 IF iCount THEN {
29990 FOR loop3=1 TO iCount
30000 idxInfo=ENH_DDF'GetIndexInfo(tName$,loop3)
30010 masidx=MAS_DDF'GetIndexInfo(tName$,idxInfo'Name$)
30020 ! Check to see if index exists in MAS
30030 IF masidx THEN temp=MAS_DDF'UpdateIndex(tName$,idxInfo) ELSE temp=MAS_DDF'AddIndex(tName$,idxInfo)
30040 NEXT loop3
30050  }
30060 ! 
30070 NEXT loop1
30080  }
30090  }
30091  } ! 11/07/07 (CJS) Added/changed lines 29812 to 29822 12/1/07 (JCR) MOVED FROM 29824 TO HERE
30100 OPENDDFDONE: IF PGMCTL<>0 THEN CLOSE (PGMCTL)
30110 ! DROP OBJECT coENHDDF
30120 ! DROP OBJECT coMASDDF
30130 IF PVXDDF_OK THEN GOSUB ERASE_DDF_FILES
30140 RETURN 
30150 ! 
30160 ERASE_DDF_FILES:
30170 ! PRINT "Erasing Files: Providex.ddf/dde"
30180 DROP OBJECT ENH_DDF,ERR=*NEXT; ENH_DDF=0
30190 E1$=enh_ddf$+"\providex.ddf"; ERASE E1$,ERR=*NEXT
30200 E1$=enh_ddf$+"\providex.dde"; ERASE E1$,ERR=*NEXT
30210 ERASEDDFEXIT: RETURN 
30220 ! 
30230 CONVERT_CLENH:
30240 ! 
30245 ! First Find out if the module level is 4.05
30250 tmpModFH=%SYS_SS'OPENTABLE("SY_Module","SYSTEM")
30255 IF tmpModFH THEN {
30260 READ (tmpModFH,KEY="SYS",REC=tempRec$)
30265 IF tempRec.moduleLevel=4.05 THEN {
30270 ! Ok, Level 4.05 and level 4.00 SY_ClassEnhancement, Convert it!
30275 CLOSE (SOACTL,ERR=*NEXT); SOACTL=0
30280 CALL "*dict/dd_updt;Update_Physical",ERR=*NEXT,"Sy_ClassEnhancement","","",ERRMSG$
30285 IF STP(ERRMSG$)<>"" THEN MSGBOX ERRMSG$; RETURN 
30290 SOACTL=%SYS_SS'OPENTABLE("SY_ClassEnhancement","SYSTEM")
30295 SYKEY:
30300 k1$=KEY(SOACTL,END=*RETURN)
30305 READ (SOACTL,KEY=k1$,REC=k1rec$)
30310 IF NUL(k1rec.DeveloperCode$) AND k1rec.ClassDeveloperCode$="234" THEN { REMOVE (SOACTL,KEY=k1$) }
30315 GOTO SYKEY
30320  }
30325 CLOSE (tmpModFH,ERR=*NEXT)
30330  }
30340 RETURN 
30350 ! 
30360 SY_CONTEXT_INSTALL:
30370 ! 
30380 NO_OPEN=1,FILE_NAME$=BASE_APP$+"_Context."+ENH_CODE$,SOA_FILE$="SY_Context",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 30480
30390 ! 
30400 P2$="SY_Context",P3$=""
30410 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
30420 ! 
30430 CONTEXT_OK=1,LAST_FILE$=""
30440 ! 
30441 SELECT *,REC=PGMCTX$ FROM PGMCTL,KNO="KCONTEXT" BEGIN $$ END $FE$ ! 09/15/04 (JCR)
30442 conflict=0
30443 READ (SOACTL,KNO="kCONTEXT",KEY=$$,DOM=*NEXT)
30444 READ (SOACTL,REC=SOACTX$,KNO="kCONTEXT",KEY=PGMCTX.TableDest$:PGMCTX.Context$:PGMCTX.SOURCE$:PGMCTX.DeveloperCode$,DOM=*NEXT); conflict=1,PGMCTX.SEQUENCENO$=SOACTX.SEQUENCENO$
30445 IF conflict THEN {
30446 IF NOT(POS(UCS(PGMCTX.ColumnSource$)=UCS(SOACTX.ColumnSource$))) THEN {
30447 ! No that we set the sequence, drop out to write it
30448 SOACTX.ColumnSource$+=","+PGMCTX.ColumnSource$; PGMCTX.ColumnSource$=SOACTX.ColumnSource$
30449 SOACTX.ColumnDest$+=","+PGMCTX.ColumnDest$; PGMCTX.ColumnDest$=SOACTX.ColumnDest$
30450 conflict=0
30451  } ELSE {
30452 PGMCTX.ColumnSource$=SOACTX.ColumnSource$
30453 PGMCTX.ColumnDest$=SOACTX.ColumnDest$
30454 conflict=0
30455  }
30456  } ELSE {
30457 ! No conflict, so just write it
30458 ! Find the next sequenceNumber
30459 PGMCTX.SEQUENCENO$=KEL(SOACTL,KNO="kPRIMARY",ERR=*PROCEED)
30460 PGMCTX.SEQUENCENO$=STR(NUM(PGMCTX.SEQUENCENO$)+1:DIM(7,"0"))
30461  }
30462 E1=SOACTL; WRITE (E1,REC=PGMCTX$)
30463 NEXT RECORD 
30480 CLOSE (PGMCTL,ERR=*NEXT)
30490 CLOSE (SOACTL,ERR=*NEXT)
30500 IF CONTEXT_OK THEN GOSUB ERASE_FILE
30510 GOSUB UPDATE_WINDOW
30520 RETURN 
30521 ! 
30530 OPEN_ODBC_FILES:
30535 ! 
30536 NO_OPEN=1
30541 IF ODBC_MEM_FILE THEN CLOSE (ODBC_MEM_FILE,ERR=*RETURN); ODBC_MEM_FILE=0
30550 ODBC_MEM_FILE=HFN,E1=ODBC_MEM_FILE,E1$="*MEMORY*"; OPEN (E1,ERR=*RETURN)E1$
30560 IF OLD_ODBC_FILE THEN CLOSE (OLD_ODBC_FILE,ERR=*PROCEED); OLD_ODBC_FILE=0 ! PLWhirley 3/5/2008 Added ERR=*PROCEED to avoid error 13
30570 IF OLD_ODBC_FLD THEN CLOSE (OLD_ODBC_FLD,ERR=*PROCEED); OLD_ODBC_FLD=0 ! PLWhirley 3/5/2008 Added ERR=*PROCEED to avoid error 13
30580 OLD_ODBC_FILE=HFN; E1=OLD_ODBC_FILE,OLD_ODBC_FILE$=ODBC_FILE$+".BACK",E1$=OLD_ODBC_FILE$; OPEN (E1,ERR=*RETURN)E1$ ! (CJS) For IT weirdness
30590 OLD_ODBC_FLD=HFN; E1=OLD_ODBC_FLD,OLD_ODBC_FLD$=ODBC_FLD$+".BACK",E1$=OLD_ODBC_FLD$; OPEN (E1,ERR=*RETURN)E1$ ! (CJS) For IT weirdness
30600 ODBC_FILE=HFN,E1=ODBC_FILE,E1$=ODBC_FILE$; OPEN (E1,ERR=*RETURN)E1$
30601 ODBC_FLD=HFN,E1=ODBC_FLD,E1$=ODBC_FLD$; OPEN (E1,ERR=*RETURN)E1$
30602 NO_OPEN=0
30610 RETURN 
30611 ! 
31330 UPDATE_ODBC:
31340 ! Added for ProvideX ODBC Merge (11/11/05) (CJS)
31350 ! CALL "SYPATH",TERM$,"//DDICTS" (CJS) Removed because of weird IT rules
31360 ! DIRECTORY "BACKUP",ERR=*NEXT  (CJS) Removed because of weird IT rule
31370 CALL "SYPATH",TERM$,"//"+BASE_APP$
31380 MOD_DIR$=LWD
31390 SELECT DDFILES$ FROM MOD_DIR$
31400 IF POS("FILE."+ENH_CODE$=UCS(DDFILES$)) THEN {
31405 CALL "SYPATH",TERM$,"//"+BASE_APP$
31410 NEW_ODBC_FILE=HFN; E1=NEW_ODBC_FILE,E1$=DDFILES$; OPEN (E1)E1$
31420 NEW_ODBC_FLD=HFN,E1=NEW_ODBC_FLD,E1$=DDFILES$(1,2)+"FLD."+ENH_CODE$; OPEN (E1)E1$
31430 ODBC_FILE$=UCS(DDFILES$(1,2))+"FILE.DD",ODBC_FLD$=UCS(DDFILES$(1,2))+"FLD.DD"
31440 CALL "SYPATH",TERM$,"//DDICTS"
31450 ERASE ODBC_FILE$+".BACK",ERR=*NEXT ! (CJS) For IT weirdness
31460 ERASE ODBC_FLD$+".BACK",ERR=*NEXT ! (CJS) For IT weirdness
31470 RENAME ODBC_FILE$,ODBC_FILE$+".BACK",ERR=*NEXT ! (CJS) For IT weirdness
31480 RENAME ODBC_FLD$,ODBC_FLD$+".BACK",ERR=*NEXT ! (CJS) For IT weirdness
31483 ERASE ODBC_FILE$,ERR=*NEXT ! CJS NEEDED FOR THIS ENVIRONMENT
31486 ERASE ODBC_FLD$,ERR=*NEXT ! CJS NEEDED FOR THIS ENVIRONMENT
31490 KEYED ODBC_FILE$,"[0:1:8],[0:9:30],[0:97:10]+[0:1:8]",,-512
31500 KEYED ODBC_FLD$,"[0:1:8],[0:17:30],[0:9:8]+[0:1:8]",,-512
31510 GOSUB OPEN_ODBC_FILES; IF NO_OPEN THEN GOTO NEXT_RECORD_UPDATE
31520 GOSUB PROCESS_ODBC_FILE
31530 CALL "SYPATH",TERM$,"//"+BASE_APP$
31540 NEXT_RECORD_UPDATE:
31550  }
31560 NEXT RECORD 
31570 RETURN 
31580 ! 
31590 PROCESS_ODBC_FILE:
31600 ! 
31610 P2$=UCS(DDFILES$(1,1))+"/"+UCS(DDFILES$(2,1))+" ODBC FILE",P3$=""
31620 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
31630 ! 
31640 ! Notes used here
31650 ODBC_OK=1,LAST_FILE$="",FLD_INRC=10,FIL_INCR=10
31660 SELECT OLD_FILE_REC$ FROM OLD_ODBC_FILE BEGIN $$ END $FE$
31670 IF OLD_FILE_REC$(1,8)="00000000" THEN E1=ODBC_FILE; WRITE RECORD (E1)OLD_FILE_REC$; GOTO NEXT_RECORD_PROCESS
31680 IF OLD_FILE_REC$(1,1)="9" THEN E1=ODBC_FILE; WRITE RECORD (E1)OLD_FILE_REC$; GOTO NEXT_RECORD_PROCESS
31690 WRITE (ODBC_MEM_FILE,KEY=OLD_FILE_REC$(9,30))OLD_FILE_REC$
31700 NEXT_RECORD_PROCESS:
31710 NEXT RECORD 
31720 ! 
31730 SELECT OLD_FLD_REC$ FROM OLD_ODBC_FLD BEGIN $$ END $FE$
31740 IF OLD_FLD_REC$(1,8)="00000000" THEN E1=ODBC_FLD; WRITE RECORD (E1)OLD_FLD_REC$
31750 IF OLD_FLD_REC$(1,1)="9" THEN E1=ODBC_FLD; WRITE RECORD (E1)OLD_FLD_REC$
31760 NEXT RECORD 
31770 ! 
31780 E1=NEW_ODBC_FILE,E2$=""; READ (E1,KEY=E2$,DOM=*NEXT)
31790 SELECT NEW_FILE_REC$ FROM E1 BEGIN $$ END $FE$
31800 WRITE (ODBC_MEM_FILE,KEY=NEW_FILE_REC$(9,30))NEW_FILE_REC$
31810 NEXT RECORD 
31820 ! 
31830 E1=ODBC_MEM_FILE
31850 SELECT MEM_REC$ FROM ODBC_MEM_FILE BEGIN $$ END $FE$
31860 E1=NEW_ODBC_FILE; READ (E1,KNO=1,KEY=MEM_REC$(9,30),DOM=*NEXT); GOSUB WRITE_NEW_ODBC; GOTO NEXT_RECORD_PROCESS2
31870 GOSUB WRITE_EXISTING_ODBC
31880 NEXT_RECORD_PROCESS2:
31890 NEXT RECORD 
31900 ! END ODBC PROCESS
31930 GOSUB ERASE_ODBC_FILES
31940 RETURN 
31950 ! 
31960 WRITE_NEW_ODBC:
31970 ! 
31976 E1=OLD_ODBC_FILE,E2$=MEM_REC$(9,30); READ (E1,KNO=1,KEY=E2$,DOM=*NEXT)OLD_ODBC_RECORD$; CHANGERECORD=1
31982 IF CHANGERECORD THEN {
31988 OLD_PRIMARY_KEY$=OLD_ODBC_RECORD$(1,8),NEW_ODBC_RECORD$=PAD(STR(FIL_INCR),8,0,"0")+OLD_ODBC_RECORD$(9); FIL_INCR+=10
31994  } ELSE {
32000 OLD_PRIMARY_KEY$=MEM_REC$(1,8),NEW_ODBC_RECORD$=PAD(STR(FIL_INCR),8,0,"0")+MEM_REC$(9); FIL_INCR+=10
32006  }
32012 E1=ODBC_FILE,E2$=NEW_ODBC_RECORD$(1,8); WRITE RECORD (E1)NEW_ODBC_RECORD$; CHANGERECORD=0
32018 SELECT NEW_FLD_RECORD$ FROM NEW_ODBC_FLD BEGIN $$ END $FE$
32024 IF NEW_FLD_RECORD$(9,8)=OLD_PRIMARY_KEY$ THEN {
32030 FLD_RECORD$=NEW_FLD_RECORD$,FLD_RECORD$(9,8)=NEW_ODBC_RECORD$(1,8),FLD_RECORD$(1,8)=PAD(STR(FLD_INCR),8,0,"0"); WRITE RECORD (ODBC_FLD)FLD_RECORD$; FLD_INCR+=10
32036  }
32042 NEXT RECORD 
32060 RETURN 
32070 ! 
32080 WRITE_EXISTING_ODBC:
32090 ! 
32100 E1=OLD_ODBC_FILE,E2$=MEM_REC$(9,30); READ (E1,KNO=1,KEY=E2$)OLD_ODBC_RECORD$
32110 OLD_PRIMARY_KEY$=OLD_ODBC_RECORD$(1,8),NEW_ODBC_RECORD$=OLD_ODBC_RECORD$,NEW_ODBC_RECORD$(1,8)=PAD(STR(FIL_INCR),8,0,"0"); FIL_INCR+=10
32120 E1=ODBC_FILE,E2$=NEW_ODBC_RECORD$(1,8); WRITE RECORD (ODBC_FILE)NEW_ODBC_RECORD$
32130 SELECT OLD_FLD_RECORD$ FROM OLD_ODBC_FLD BEGIN $$ END $FE$
32140 IF OLD_FLD_RECORD$(9,8)=OLD_PRIMARY_KEY$ THEN {
32150 NEW_FLD_RECORD$=OLD_FLD_RECORD$,NEW_FLD_RECORD$(9,8)=NEW_ODBC_RECORD$(1,8),NEW_FLD_RECORD$(1,8)=PAD(STR(FLD_INCR),8,0,"0"); WRITE RECORD (ODBC_FLD)NEW_FLD_RECORD$; FLD_INCR+=10
32160  }
32170 NEXT RECORD 
32180 RETURN 
32190 ! 
32200 ERASE_ODBC_FILES:
32210 ! PRINT "Erasing Files: ODBC"
32216 IF NEW_ODBC_FILE THEN { ODBC_PATH$=FID(NEW_ODBC_FILE) }
32222 CLOSE (NEW_ODBC_FILE,ERR=*NEXT)
32228 NEW_ODBC_FILE=0
32234 E1$=ODBC_PATH$(9)
32240 ERASE E1$,ERR=*NEXT
32246 IF NEW_ODBC_FLD THEN { ODBC_PATH$=FID(NEW_ODBC_FLD) }
32252 CLOSE (NEW_ODBC_FLD,ERR=*NEXT)
32258 NEW_ODBC_FLD=0
32264 E1$=ODBC_PATH$(9)
32270 ERASE E1$,ERR=*NEXT
32280 RETURN 
32290 ! 
32300 UPDATE_REMOVE_TASK:
32310 ! 
32320 NO_OPEN=1,FILE_NAME$=BASE_APP$+"MENURMV."+ENH_CODE$,REMOVE_FILE=UNT; OPEN (REMOVE_FILE,ERR=*RETURN)FILE_NAME$
32330 P2$="Remove old tasks and menus",P3$=""
32340 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
32350 DIR$="SOA"; CALL "SYPATH",TERM$,DIR$; IF DIR$="ERR" THEN GOTO *RETURN
32360 TASK_FILE$="SY_Task",SOATASK=0,SOATASK=%SYS_SS'OPENTABLE(TASK_FILE$,TBL(UCS(MID(TASK_FILE$,-4,4))=".SOA","SYSTEM","SOA"),ERR=END_REMOVETASK)
32370 MENU_FILE$="SY_Menu",SOAMENU=0,SOAMENU=%SYS_SS'OPENTABLE(MENU_FILE$,TBL(UCS(MID(MENU_FILE$,-4,4))=".SOA","SYSTEM","SOA"),ERR=END_REMOVETASK)
32390 NEXT_REMOVE: READ RECORD (REMOVE_FILE,END=END_REMOVETASK)RMV_REC$; RMV_REC$=STP(RMV_REC$)
32395 IF NUL(RMV_REC$) THEN GOTO NEXT_REMOVE ! 11/05/07 (JCR)
32400 SELECT *,REC=SOA$ FROM SOATASK,KNO="KPROGRAMNAME" BEGIN RMV_REC$+$$ END RMV_REC$+$FE$
32410 GOSUB UPDATE_REMOVE_MENU
32420 REMOVE (SOATASK,KEY=SOA.MODULENUMBER$:SOA.TASKOWNER$:SOA.DEVELOPERCODE$:SOA.TASKID$,DOM=*NEXT)
32430 NEXT RECORD 
32440 GOTO NEXT_REMOVE
32480 END_REMOVETASK:
32490 E1=REMOVE_FILE; IF E1 THEN CLOSE (E1)
32500 E1=SOATASK; IF E1 THEN CLOSE (E1)
32510 E1=SOAMENU; IF E1 THEN CLOSE (E1)
32520 RETURN 
32530 ! 
32540 UPDATE_REMOVE_MENU:
32550 ! 
32560 SELECT *,REC=MNU$ FROM SOAMENU BEGIN $$ END $FE$ WHERE MNU.TASKKEY$=SOA.MODULENUMBER$+SOA.TASKOWNER$+SOA.DEVELOPERCODE$+SOA.TASKID$
32570 REMOVE (SOAMENU,KEY=MNU.MODULECODE$:MNU.TASKKEY$:MNU.SEQUENCE$,DOM=*NEXT)
32580 NEXT RECORD 
32590 RETURN 
32600 ! 
32610 SY_MEMOMANAGER_INSTALL:
32620 NO_OPEN=1,FILE_NAME$=BASE_APP$+"_MemoManager."+ENH_CODE$,SOA_FILE$="SY_MemoManager",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO MEMOMANAGER_CLOSE
32640 P2$="SY_MemoManager",P3$=""
32650 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
32660 ! 
32670 MEMOMANAGER_OK=1,LAST_FILE$=""
32680 ! 
32690 SELECT * FROM PGMCTL BEGIN $$ END $FE$
32700 E1=SOACTL; WRITE (E1)
32710 NEXT RECORD 
32720 MEMOMANAGER_CLOSE: CLOSE (PGMCTL,ERR=*NEXT)
32730 CLOSE (SOACTL,ERR=*NEXT)
32740 IF MEMOMANAGER_OK THEN GOSUB ERASE_FILE
32745 GOSUB UPDATE_WINDOW
32750 RETURN 
32760 ! 
32770 SY_BATCHMANAGER_INSTALL:
32780 NO_OPEN=1,FILE_NAME$=BASE_APP$+"_BatchManager."+ENH_CODE$,SOA_FILE$="SY_BatchManager",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO BATCHMANAGER_CLOSE
32790 ! 
32800 P2$="SY_BatchManager",P3$=""
32810 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
32820 ! 
32830 BATCHMANAGER_OK=1,LAST_FILE$=""
32840 ! 
32850 SELECT * FROM PGMCTL BEGIN $$ END $FE$
32860 E1=SOACTL; WRITE (E1)
32870 NEXT RECORD 
32880 BATCHMANAGER_CLOSE: CLOSE (PGMCTL,ERR=*NEXT)
32890 CLOSE (SOACTL,ERR=*NEXT)
32900 IF BATCHMANAGER_OK THEN GOSUB ERASE_FILE
32905 GOSUB UPDATE_WINDOW
32910 RETURN 
32920 ! 
32930 SY_REPORTMASTER_INSTALL:
32940 NO_OPEN=1,FILE_NAME$=BASE_APP$+"_ReportManagerMaster."+ENH_CODE$,SOA_FILE$="SY_ReportManagerMaster",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO REPORTMANAGERMASTER_CLOSE
32950 ! 
32960 P2$="SY_ReportManagerMaster",P3$=""
32970 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
32980 ! 
32990 REPORTMANAGERMASTER_OK=1,LAST_FILE$=""
33000 ! 
33010 SELECT * FROM PGMCTL BEGIN $$ END $FE$
33020 E1=SOACTL; WRITE (E1)
33030 NEXT RECORD 
33040 REPORTMANAGERMASTER_CLOSE: CLOSE (PGMCTL,ERR=*NEXT)
33050 CLOSE (SOACTL,ERR=*NEXT)
33060 IF REPORTMANAGERMASTER_OK THEN GOSUB ERASE_FILE
33065 GOSUB UPDATE_WINDOW
33070 RETURN 
33080 ! 
33090 SY_REPORTTEMPLATE_INSTALL:
33100 NO_OPEN=1,FILE_NAME$=BASE_APP$+"_ReportManagerTemplate."+ENH_CODE$,SOA_FILE$="SY_ReportManagerTemplate",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO REPORTTEMPLATE_CLOSE
33110 ! 
33120 P2$="SY_ReportManagerTemplate",P3$=""
33130 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
33140 ! 
33150 REPORTTEMPLATE_OK=1,LAST_FILE$=""
33160 ! 
33170 SELECT * FROM PGMCTL BEGIN $$ END $FE$
33180 E1=SOACTL; WRITE (E1)
33190 NEXT RECORD 
33200 REPORTTEMPLATE_CLOSE: CLOSE (PGMCTL,ERR=*NEXT)
33210 CLOSE (SOACTL,ERR=*NEXT)
33220 IF REPORTTEMPLATE_OK THEN GOSUB ERASE_FILE
33225 GOSUB UPDATE_WINDOW
33230 RETURN 
33240 ! 
33250 SY_DEFAULTPERFORM_INSTALL:
33260 NO_OPEN=1,FILE_NAME$=BASE_APP$+"_DefaultPerform."+ENH_CODE$,SOA_FILE$="VI_DefaultPerform",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO DEFAULTPERFORM_CLOSE
33270 ! 
33280 P2$="VI_DefaultPerform",P3$=""
33290 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
33300 ! 
33310 DEFAULTPERFORM_OK=1,LAST_FILE$=""
33320 ! 
33330 SELECT * FROM PGMCTL BEGIN $$ END $FE$
33340 E1=SOACTL; WRITE (E1)
33350 NEXT RECORD 
33360 DEFAULTPERFORM_CLOSE: CLOSE (PGMCTL,ERR=*NEXT)
33370 CLOSE (SOACTL,ERR=*NEXT)
33380 IF DEFAULTPERFORM_OK THEN GOSUB ERASE_FILE
33385 GOSUB UPDATE_WINDOW
33390 RETURN 
33400 ! 
33410 IT_EMAIL_INSTALL:
33420 NO_OPEN=1,FILE_NAME$=BASE_APP$+"_Email."+ENH_CODE$,SOA_FILE$="IT_Email",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO ITEMAIL_CLOSE
33430 ! 
33440 P2$="IT_Email",P3$=""
33450 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
33460 ! 
33470 ITEMAIL_OK=1,LAST_FILE$=""
33480 ! 
33490 SELECT * FROM PGMCTL BEGIN $$ END $FE$
33500 E1=SOACTL; WRITE (E1)
33510 NEXT RECORD 
33520 ITEMAIL_CLOSE: CLOSE (PGMCTL,ERR=*NEXT)
33530 CLOSE (SOACTL,ERR=*NEXT)
33540 IF ITEMAIL_OK THEN GOSUB ERASE_FILE
33545 GOSUB UPDATE_WINDOW
33550 RETURN 
33560 ! 
33570 IT_EMAILTOKEN_INSTALL:
33580 NO_OPEN=1,FILE_NAME$=BASE_APP$+"_EmailToken."+ENH_CODE$,SOA_FILE$="IT_EmailToken",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO ITEMAILTOKEN_CLOSE
33590 ! 
33600 P2$="IT_EmailToken",P3$=""
33610 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
33620 ! 
33630 ITEMAILTOKEN_OK=1,LAST_FILE$=""
33640 ! 
33650 SELECT * FROM PGMCTL BEGIN $$ END $FE$
33660 E1=SOACTL; WRITE (E1)
33670 NEXT RECORD 
33680 ITEMAILTOKEN_CLOSE: CLOSE (PGMCTL,ERR=*NEXT)
33690 CLOSE (SOACTL,ERR=*NEXT)
33700 IF ITEMAILTOKEN_OK THEN GOSUB ERASE_FILE
33705 GOSUB UPDATE_WINDOW
33710 RETURN 
33720 ! 
33730 IT_EMAILNOTI_INSTALL:
33740 NO_OPEN=1,FILE_NAME$=BASE_APP$+"_EmailNotification."+ENH_CODE$,SOA_FILE$="IT_EmailNotification",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO ITEMAILNOTI_CLOSE
33750 ! 
33760 P2$="IT_EmailNotification",P3$=""
33770 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
33780 ! 
33790 ITEMAILNOTI_OK=1,LAST_FILE$=""
33800 ! 
33810 SELECT * FROM PGMCTL BEGIN $$ END $FE$
33820 E1=SOACTL; WRITE (E1)
33830 NEXT RECORD 
33840 ITEMAILNOTI_CLOSE: CLOSE (PGMCTL,ERR=*NEXT)
33850 CLOSE (SOACTL,ERR=*NEXT)
33860 IF ITEMAILNOTI_OK THEN GOSUB ERASE_FILE
33865 GOSUB UPDATE_WINDOW
33870 RETURN 
33880 ! 
33890 CM_ENTITY_INSTALL:
33900 NO_OPEN=1,FILE_NAME$=BASE_APP$+"_Entity."+ENH_CODE$,SOA_FILE$="CM_Entity",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO CM_ENTITY_CLOSE
33910 ! 
33920 P2$="CM_Entity",P3$=""
33930 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
33940 ! 
33950 CM_ENTITY_OK=1,LAST_FILE$=""
33960 ! 
33970 SELECT * FROM PGMCTL BEGIN $$ END $FE$ ! 08/17/06 (JCR)
33980 E1=SOACTL; WRITE (E1)
33990 NEXT RECORD 
34000 CM_ENTITY_CLOSE: CLOSE (PGMCTL,ERR=*NEXT)
34010 CLOSE (SOACTL,ERR=*NEXT)
34020 IF CM_ENTITY_OK THEN GOSUB ERASE_FILE
34025 GOSUB UPDATE_WINDOW
34030 RETURN 
34040 ! 
34050 CM_UDF_INSTALL:
34060 NO_OPEN=1,FILE_NAME$=BASE_APP$+"_UDF."+ENH_CODE$,SOA_FILE$="CM_UDF",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO CM_UDF_CLOSE
34070 ! 
34080 P2$="CM_UDF",P3$=""
34090 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
34100 ! 
34110 CM_UDF_OK=1,LAST_FILE$=""
34120 ! 
34130 SELECT * FROM PGMCTL BEGIN $$ END $FE$
34140 E1=SOACTL; WRITE (E1)
34150 NEXT RECORD 
34160 CM_UDF_CLOSE: CLOSE (PGMCTL,ERR=*NEXT)
34170 CLOSE (SOACTL,ERR=*NEXT)
34180 IF CM_UDF_OK THEN GOSUB ERASE_FILE
34185 GOSUB UPDATE_WINDOW
34190 RETURN 
34200 ! 
34210 VI0XRF_INSTALL:
34220 NO_OPEN=1,FILE_NAME$="VI0XRF."+ENH_CODE$,SOA_FILE$="VI0XRF.SOA",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO VI0XRF_CLOSE
34230 ! 
34240 P2$="VI0XRF.SOA",P3$=""
34252 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
34260 ! 
34270 VI0XRF_OK=1,LAST_FILE$=""
34280 ! 
34290 ! Do something diifferent here
34300 E1=PGMCTL,E2$=""; READ (E1,KEY=E2$,DOM=*NEXT)
34310 VI0XRFTOP: E1=PGMCTL,K$=KEY(E1,END=VI0XRF_CLOSE)
34320 E1=PGMCTL,E2$=K$; READ (E1,KEY=E2$)DATADICT$,ENTITYNAME$,FILETYPE$,KEYEXPRESSION$,IDXPOS,IDXLEN
34330 VI0XRF$=REC(CPL("IOLIST DATADICT$,ENTITYNAME$,FILETYPE$,KEYEXPRESSION$,IDXPOS,IDXLEN"))
34340 E1=SOACTL,E2$=K$; WRITE RECORD (E1)VI0XRF$
34350 GOTO VI0XRFTOP
34360 VI0XRF_CLOSE: CLOSE (PGMCTL,ERR=*NEXT)
34370 CLOSE (SOACTL,ERR=*NEXT)
34380 IF VI0XRF_OK THEN GOSUB ERASE_FILE
34381 GOSUB UPDATE_WINDOW
34390 RETURN 
34400 ! 
34410 OPEN_VI0XRF:
34420 DIR$=PATH$; CALL "SYPATH",TERM$,DIR$; IF DIR$="ERR" THEN GOTO OPENVI0XRFEXIT
34430 PGMCTL=UNT,E1=PGMCTL,E1$=FILE_NAME$; OPEN (E1,ERR=OPENVI0XRFEXIT)E1$
34440 DIR$="VI"; CALL "SYPATH",TERM$,DIR$; IF DIR$="ERR" THEN GOTO OPENVI0XRFEXIT
34450 SOACTL=UNT,E1=SOACTL,E1$=SOA_FILE$; OPEN (E1,ERR=OPENVI0XRFEXIT)E1$
34460 NO_OPEN=0
34470 OPENVI0XRFEXIT: RETURN 
34480 ! 
34760 RENAME_DDF_DDE: ! 09/20/06  (CJS)
34770 CALL "SYPATH",TERM$,"SOA"
34780 E1$="IN_providex.ddf"; OPEN (HFN,ERR=*RETURN)E1$; ddf_file=LFO
34790 path_in_ddf$=PTH(ddf_file)
34791 CLOSE (ddf_file)
34800 E1$="IN_providex.dde"; OPEN (HFN,ERR=*RETURN)E1$; dde_file=LFO
34810 path_in_dde$=PTH(dde_file)
34820 CLOSE (dde_file)
34830 path_new_ddf$=path_in_ddf$(1,POS(DLM=path_in_ddf$,-1))+"providex.ddf"
34840 path_new_dde$=path_in_dde$(1,POS(DLM=path_in_dde$,-1))+"providex.dde"
34850 RENAME path_in_ddf$,path_new_ddf$
34860 RENAME path_in_dde$,path_new_dde$
34870 RETURN 
34880 ! 
34890 SY_MEMODEFAULT_INSTALL: ! (CJS) 01/19/07
34900 NO_OPEN=1,FILE_NAME$=BASE_APP$+"_MemoDefault."+ENH_CODE$,SOA_FILE$="SY_MemoDefault",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO MEMODEFAULT_CLOSE
34910 P2$="SY_MemoDefault",P3$=""
34920 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
34930 ! 
34940 MEMODEFAULT_OK=1,LAST_FILE$=""
34950 ! 
34960 SELECT * FROM PGMCTL BEGIN $$ END $FE$
34970 E1=SOACTL; WRITE (E1)
34980 NEXT RECORD 
34990 MEMODEFAULT_CLOSE: CLOSE (PGMCTL,ERR=*NEXT)
35000 CLOSE (SOACTL,ERR=*NEXT)
35010 IF MEMODEFAULT_OK THEN GOSUB ERASE_FILE
35020 GOSUB UPDATE_WINDOW
35030 RETURN 
35050 ! 
35060 SY_GRIDDEFINITION_INSTALL:
35070 NO_OPEN=1,FILE_NAME$=BASE_APP$+"_GridDefinition."+ENH_CODE$,SOA_FILE$="SY_GridDefinition",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 35470
35080 P2$="SY_GridDefinition",P3$=""
35090 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
35100 GRIDDEF_OK=1,LAST_FILE$=""
35120 ! May need some checking here for duplicate Grids and Forms
35130 SELECT *,REC=ENH$ FROM PGMCTL BEGIN $$ END $FE$ ! 09/15/04 (JCR)
35140 foundCol=0
35150 READ (SOACTL,REC=SY$,KEY=enh.FormID$:enh.GridName$:enh.CompanyCode$:enh.UserKey$:enh.WorkstationName$:enh.Level$:enh.Seq$,DOM=*NEXT); foundCol=1 ! DSD:CJS 06/07
35160 IF foundCol THEN {
35170 ! Found a "Y" Level column at this sequence,grid and panel, check to see if the IOLVar$ names are the same
35180 IF UCS(enh.IOLVar$)=UCS(sy.IOLVar$) THEN {
35190 ! The Names are the same, we can overwrite, might be a re-install
35200 E1=SOACTL; WRITE (E1,REC=ENH$)
35210  } ELSE {
35220 ! Variable Names didn't match
35230 IF sy.Frozen$="Y" AND enh.Frozen$="Y" THEN {
35240 ! Found a frozen "Y" level column at this sequence
35250 ! AND ours is a frozen column
35260 ! Insert a record
35270 tmpKEY$=MID(KEC(SOACTL),1,LEN(KEC(SOACTL))-3)
35280 GOSUB INSERT_RECORD
35290  }
35300 IF sy.Frozen$="Y" AND NOT(enh.Frozen$="Y") THEN {
35310 ! Found a frozen "Y" level column at this sequence
35320 ! AND ours is not frozen
35330 ! Append a record
35340 tmpKEY$=MID(KEC(SOACTL),1,LEN(KEC(SOACTL))-3)
35350 GOSUB APPEND_RECORD
35360  }
35370  }
35380  } ELSE {
35390 ! No "Y" record Found for this column
35400 E1=SOACTL; WRITE (E1,REC=ENH$)
35410  }
35420 NEXT RECORD 
35430 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
35440 IF SOACTL<>0 THEN CLOSE (SOACTL)
35450 IF GRIDDEF_OK THEN GOSUB ERASE_FILE
35460 GOSUB UPDATE_WINDOW
35470 RETURN 
35480 INSERT_RECORD:
35490 tmpSEQ$=enh.Seq$
35500 OPEN (HFN,IOL=IOL(SOACTL))"*MEMORY*"
35510 memCH=LFO
35520 SELECT *,REC=grd$ FROM SOACTL,KNO="kPRIMARY" BEGIN tmpKEY$+tmpSEQ$ END tmpKEY$+$FE$
35530 grd.Seq$=PAD(STR(NUM(grd.Seq$)+1),3,0,"0")
35540 WRITE (memCH,KEY=tmpKEY$+grd.Seq$,REC=grd$)
35550 NEXT RECORD 
35560 OPEN (HFN,IOL=*)PTH(SOACTL) ! 12/29/08 CJS
35570 tmpCH=LFO
35580 SELECT *,REC=tmp$ FROM memCH BEGIN $$
35590 WRITE (tmpCH,REC=tmp$)
35600 NEXT RECORD 
35610 REMOVE (tmpCH,KEY=tmpKEY$+tmpSEQ$)
35620 CLOSE (tmpCH)
35630 CLOSE (memCH)
35640 RETURN 
35650 APPEND_RECORD:
35660 OPEN (HFN,IOL=IOL(SOACTL))"*MEMORY*"
35670 memCH=LFO
35680 SELECT *,REC=grd$ FROM SOACTL,KNO="kPRIMARY" BEGIN tmpKEY$ END tmpKEY$+$FE$
35690 LastSeq++
35700 NEXT RECORD 
35710 enh.Seq$=PAD(STR(LastSeq+1),3,0,"0")
35720 WRITE (SOACTL,REC=ENH$)
35730 RETURN 
35740 ! 
35750 UPDATE_LIBRARY_PATCH:
35760 ! 
35765 DIR$=PATH$; CALL "SYPATH",TERM$,DIR$; IF DIR$="ERR" THEN RETURN 
35770 NO_OPEN=1,FILE_NAME$=ENH_CODE$+"_INST.pip"; PGMCTL=HFN,E1=PGMCTL,E1$=FILE_NAME$; OPEN (E1,ERR=*NEXT)E1$; NO_OPEN=0
35780 IF NO_OPEN THEN RETURN 
35781 CLOSE (E1,ERR=*NEXT)
35783 P2$="Nomads Library Patch File",P3$=""
35786 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
35790 CALL FILE_NAME$
35800 RETURN 
35810 ! 
35820 SY_MESSAGE_INSTALL:
35830 ! 
35840 NO_OPEN=1,FILE_NAME$=BASE_APP$+"_Message."+ENH_CODE$,SOA_FILE$="SY_Message",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 35940
35850 ! 
35860 P2$="SY_Message",P3$=""
35870 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
35880 ! 
35890 SYMESSAGE_OK=1,LAST_FILE$=""
35900 ! May need some checking here for duplicate Enhancements
35910 SELECT * FROM PGMCTL BEGIN $$ END $FE$ ! 09/15/04 (JCR)
35920 E1=SOACTL; WRITE (E1,KEY=KEC(PGMCTL)) ! 10/29/07 (JCR)
35930 NEXT RECORD 
35940 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
35950 IF SOACTL<>0 THEN CLOSE (SOACTL)
35960 IF SYMESSAGE_OK THEN GOSUB ERASE_FILE
35970 GOSUB UPDATE_WINDOW
35980 RETURN 
35990 ! 
36000 UPDATE_REMOVE_MODULE_MENU: ! added 11/5/07 (JCR) to remove old modules from menu
36010 ! 
36020 NO_OPEN=1,FILE_NAME$=BASE_APP$+"MODMENURMV."+ENH_CODE$,REMOVE_FILE=UNT; OPEN (REMOVE_FILE,ERR=*RETURN)FILE_NAME$
36030 P2$="Remove module menu",P3$=""
36040 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
36050 DIR$="SOA"; CALL "SYPATH",TERM$,DIR$; IF DIR$="ERR" THEN GOTO *RETURN
36060 MENU_FILE$="SY_Menu",SOAMENU=0,SOAMENU=%SYS_SS'OPENTABLE(MENU_FILE$,TBL(UCS(MID(MENU_FILE$,-4,4))=".SOA","SYSTEM","SOA"),ERR=END_REMOVEMODULEMENU)
36070 NEXT_REMOVEMODULEMENU: READ RECORD (REMOVE_FILE,END=END_REMOVEMODULEMENU)RMV_REC$; RMV_REC$=STP(RMV_REC$)
36075 IF NUL(RMV_REC$) THEN GOTO NEXT_REMOVEMODULEMENU
36080 READ (SOAMENU,REC=MNU$,KNO="KPOSITION",KEY=RMV_REC$,DOM=NEXT_REMOVEMODULEMENU)
36090 REMOVE (SOAMENU,KEY=MNU.MODULECODE$:MNU.TASKKEY$:MNU.SEQUENCE$,DOM=*NEXT)
36100 GOTO NEXT_REMOVEMODULEMENU
36110 END_REMOVEMODULEMENU:
36120 E1=REMOVE_FILE; IF E1 THEN CLOSE (E1)
36130 E1=SOAMENU; IF E1 THEN CLOSE (E1)
36140 RETURN 
36150 ! 
36160 SY_POPUPITEM_INSTALL:
36170 ! 
36180 NO_OPEN=1,FILE_NAME$=BASE_APP$+"_PopupItem."+ENH_CODE$,SOA_FILE$="SY_PopupItem",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 36280
36190 ! 
36200 P2$="SY_PopupItem",P3$=""
36210 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
36220 ! 
36230 SYPopupItem_OK=1,LAST_FILE$=""
36240 ! May need some checking here for duplicate Enhancements
36250 SELECT * FROM PGMCTL BEGIN $$ END $FE$ ! 09/15/04 (JCR)
36260 E1=SOACTL; WRITE (E1) ! 10/29/07 (JCR)
36270 NEXT RECORD 
36280 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
36290 IF SOACTL<>0 THEN CLOSE (SOACTL)
36300 IF SYPopupItem_OK THEN GOSUB ERASE_FILE
36310 GOSUB UPDATE_WINDOW
36320 RETURN 
36321 ! 
36330 SY_PopupMenu_INSTALL:
36340 ! 
36350 NO_OPEN=1,FILE_NAME$=BASE_APP$+"_PopupMenu."+ENH_CODE$,SOA_FILE$="SY_PopupMenu",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 36450
36360 ! 
36370 P2$="SY_PopupMenu",P3$=""
36380 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
36390 ! 
36400 SYPopUpMenu_OK=1,LAST_FILE$=""
36410 ! May need some checking here for duplicate Enhancements
36420 SELECT * FROM PGMCTL BEGIN $$ END $FE$ ! 09/15/04 (JCR)
36430 E1=SOACTL; WRITE (E1) ! 10/29/07 (JCR)
36440 NEXT RECORD 
36450 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
36460 IF SOACTL<>0 THEN CLOSE (SOACTL)
36470 IF SYPopUpMenu_OK THEN GOSUB ERASE_FILE
36480 GOSUB UPDATE_WINDOW
36490 RETURN 
36491 ! 
36500 SY_POPUPMENUITEM_INSTALL:
36510 ! 
36520 NO_OPEN=1,FILE_NAME$=BASE_APP$+"_PopupMenuItem."+ENH_CODE$,SOA_FILE$="SY_PopupMenuItem",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 36620
36530 ! 
36540 P2$="SY_PopupMenuItem",P3$=""
36550 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
36560 ! 
36570 SYPopupMenuItem_OK=1,LAST_FILE$=""
36580 ! May need some checking here for duplicate Enhancements
36590 SELECT * FROM PGMCTL BEGIN $$ END $FE$ ! 09/15/04 (JCR)
36600 E1=SOACTL; WRITE (E1) ! 10/29/07 (JCR)
36610 NEXT RECORD 
36620 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
36630 IF SOACTL<>0 THEN CLOSE (SOACTL)
36640 IF SYPopupMenuItem_OK THEN GOSUB ERASE_FILE
36650 GOSUB UPDATE_WINDOW
36660 RETURN 
36661 ! 
36670 SY_PopupXref_INSTALL:
36680 ! 
36690 NO_OPEN=1,FILE_NAME$=BASE_APP$+"_PopupXref."+ENH_CODE$,SOA_FILE$="SY_PopupXref",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 36790
36700 ! 
36710 P2$="SY_PopupXref",P3$=""
36720 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
36730 ! 
36740 SYPopupXref_OK=1,LAST_FILE$=""
36750 ! May need some checking here for duplicate Enhancements
36760 SELECT * FROM PGMCTL BEGIN $$ END $FE$ ! 09/15/04 (JCR)
36770 E1=SOACTL; WRITE (E1) ! 10/29/07 (JCR)
36780 NEXT RECORD 
36790 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
36800 IF SOACTL<>0 THEN CLOSE (SOACTL)
36810 IF SYPopupXref_OK THEN GOSUB ERASE_FILE
36820 GOSUB UPDATE_WINDOW
36830 RETURN 
36840 ! 
40000 CLEAR_ALE_QUERY: ! ASI - PLWhirley 4/5/07 Routine to clear out old ALE queries before writing new
40010 D_R$="SOA"; CALL "SYPATH",TERM$,D_R$
40020 FOR tmpVar=2 TO 4
40030 tmpVar$="SY1Q0"+STR(tmpVar)+".SOA"
40040 SELECT tmpRec$ FROM tmpVar$ BEGIN REMOVE_ALE$ END REMOVE_ALE$+$FE$
40050 E1=LFO,E2$=KEC(LFO); REMOVE (E1,KEY=E2$,ERR=*NEXT)
40060 NEXT RECORD 
40070 NEXT tmpVar
40080 tmpVar=0; tmpVar$=""; tmpRec$=""
40090 CLEAR_ALE_QUERY_END: RETURN 
40100 ! 
40110 INSTALL_PAL:
40120 ! 
40130 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0PAL."+ENH_CODE$,SOA_FILE$="SY_PopupXref",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE; IF NO_OPEN THEN GOTO 40220
40140 P2$=BASE_APP$+"_PAL."+ENH_CODE$,P3$=""
40150 PRINT 'IMAGE'(DELETE "Msg"),'IMAGE'("Msg"),'TEXT'(@X(2),@Y(1),"Updating: "+P2$),'IMAGE'($$),
40160 ! 
40170 PAL_OK=1,LAST_FILE$="",LIB_NAME$="",LIB_CHN=HFN
40180 READ (PGMCTL,KEY="",DOM=*NEXT)
40181 PAL_KEY: K$=KEY(PGMCTL,END=40220)
40190 IF LIB_NAME$<>STP(MID(K$,1,60)) THEN {
40191 LIB_NAME$=STP(MID(K$,1,60))
40192 CLOSE (LIB_CHN,ERR=*NEXT)
40193 OPEN (LIB_CHN)LIB_NAME$
40194  }
40200 IF LIB_CHN THEN {
40201 READ RECORD (PGMCTL,KEY=K$)LIB_REC$
40210 WRITE RECORD (LIB_CHN,KEY=K$(61,16))LIB_REC$
40211  }
40212 GOTO PAL_KEY
40220 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
40230 IF SOACTL<>0 THEN CLOSE (SOACTL)
40231 IF LIB_CHN<>0 THEN CLOSE (LIB_CHN)
40240 IF PAL_OK THEN GOSUB ERASE_FILE
40250 GOSUB UPDATE_WINDOW
40260 RETURN 
40270 INSTALL_PROGRAM_PATCH_FILE:
40275 NO_OPEN=1,FILE_NAME$=BASE_APP$+"0PAT."+ENH_CODE$,SOA_FILE$="SY_PopupXref",PGMCTL=0,SOACTL=0; GOSUB OPEN_FILE
40277 IF PGMCTL<>0 THEN CLOSE (PGMCTL)
40278 IF SOACTL<>0 THEN CLOSE (SOACTL)
40279 IF NO_OPEN THEN RETURN 
40280 INVOKE HIDE WAIT TARGETDIR$+"\Home\pvxwin32.exe ../launcher/sota.ini ../soa/dsdpatch.m4p -ARG "+BASE_APP$+" "+ENH_CODE$
40730 RETURN 
